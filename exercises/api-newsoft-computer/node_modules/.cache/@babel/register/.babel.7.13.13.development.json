{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "// Apollo Server solo (Sin express)\nimport { ApolloServer } from 'apollo-server'; //const { ApolloServer } = require('apollo-server');        // Uso cuando no se tiene instalado babel\n// ======================================= IMPORT TYPES =================================================\n\nimport typeDefs from './src/types'; // ======================================================================================================\n// ====================================== IMPORT RESOLVERS =================================================\n\nimport resolvers from './src/resolvers'; // ======================================================================================================\n// CONEXION & PUERTO\n// ======================================================================================================\n// IMPORTANDO TYPE'S & RESOLVERS'S\n// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n}); // PUERTO\n//Middleware para conectar Apollo Server\n\nconst PORT = process.env.PORT || '4000'; // The `listen` method launches a web server.\n\nserver.listen(PORT).then(({\n  url\n}) => {\n  console.log(` ðŸš€ Servidor corriendo en: ðŸš€ ${url}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkFwb2xsb1NlcnZlciIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwic2VydmVyIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iLCJ0aGVuIiwidXJsIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQ0E7QUFDQSxTQUFTQSxZQUFULFFBQTZCLGVBQTdCLEMsQ0FDQTtBQUdBOztBQUNBLE9BQU9DLFFBQVAsTUFBcUIsYUFBckIsQyxDQUNBO0FBRUE7O0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixpQkFBdEIsQyxDQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQSxNQUFNQyxNQUFNLEdBQUcsSUFBSUgsWUFBSixDQUFpQjtBQUFFQyxFQUFBQSxRQUFGO0FBQVlDLEVBQUFBO0FBQVosQ0FBakIsQ0FBZixDLENBR0E7QUFDQTs7QUFDQSxNQUFNRSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLElBQW9CLE1BQWpDLEMsQ0FFQTs7QUFDQUQsTUFBTSxDQUFDSSxNQUFQLENBQWNILElBQWQsRUFBb0JJLElBQXBCLENBQXlCLENBQUM7QUFBRUMsRUFBQUE7QUFBRixDQUFELEtBQWE7QUFDbENDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLGlDQUFnQ0YsR0FBSSxFQUFqRDtBQUNELENBRkgiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5kcmVzL05DL0NPVVJTRVMvY291cnNlLWdyYXBocWwvZXhlcmNpc2VzL2FwaS1uZXdzb2Z0LWNvbXB1dGVyLyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gQXBvbGxvIFNlcnZlciBzb2xvIChTaW4gZXhwcmVzcylcbmltcG9ydCB7IEFwb2xsb1NlcnZlciB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXInO1xuLy9jb25zdCB7IEFwb2xsb1NlcnZlciB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlcicpOyAgICAgICAgLy8gVXNvIGN1YW5kbyBubyBzZSB0aWVuZSBpbnN0YWxhZG8gYmFiZWxcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gSU1QT1JUIFRZUEVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCB0eXBlRGVmcyBmcm9tICcuL3NyYy90eXBlcyc7XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gSU1QT1JUIFJFU09MVkVSUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vc3JjL3Jlc29sdmVycyc7XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyBDT05FWElPTiAmIFBVRVJUT1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIElNUE9SVEFORE8gVFlQRSdTICYgUkVTT0xWRVJTJ1Ncbi8vIFRoZSBBcG9sbG9TZXJ2ZXIgY29uc3RydWN0b3IgcmVxdWlyZXMgdHdvIHBhcmFtZXRlcnM6IHlvdXIgc2NoZW1hXG4vLyBkZWZpbml0aW9uIGFuZCB5b3VyIHNldCBvZiByZXNvbHZlcnMuXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHsgdHlwZURlZnMsIHJlc29sdmVycyB9KTtcbiAgICBcblxuLy8gUFVFUlRPXG4vL01pZGRsZXdhcmUgcGFyYSBjb25lY3RhciBBcG9sbG8gU2VydmVyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAnNDAwMCc7XG5cbi8vIFRoZSBgbGlzdGVuYCBtZXRob2QgbGF1bmNoZXMgYSB3ZWIgc2VydmVyLlxuc2VydmVyLmxpc3RlbihQT1JUKS50aGVuKCh7IHVybCB9KSA9PiB7XG4gICAgY29uc29sZS5sb2coYCDwn5qAIFNlcnZpZG9yIGNvcnJpZW5kbyBlbjog8J+agCAke3VybH1gKTtcbiAgfSk7XG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ApolloServer",
        "typeDefs",
        "resolvers",
        "server",
        "PORT",
        "process",
        "env",
        "listen",
        "then",
        "url",
        "console",
        "log"
      ],
      "mappings": "AACA;AACA,SAASA,YAAT,QAA6B,eAA7B,C,CACA;AAGA;;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;AAEA;;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CACA;AAGA;AACA;AAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAjB,CAAf,C,CAGA;AACA;;AACA,MAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,MAAjC,C,CAEA;;AACAD,MAAM,CAACI,MAAP,CAAcH,IAAd,EAAoBI,IAApB,CAAyB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCF,GAAI,EAAjD;AACD,CAFH",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/",
      "sourcesContent": [
        "\n// Apollo Server solo (Sin express)\nimport { ApolloServer } from 'apollo-server';\n//const { ApolloServer } = require('apollo-server');        // Uso cuando no se tiene instalado babel\n\n\n// ======================================= IMPORT TYPES =================================================\nimport typeDefs from './src/types';\n// ======================================================================================================\n\n// ====================================== IMPORT RESOLVERS =================================================\nimport resolvers from './src/resolvers';\n// ======================================================================================================\n\n\n// CONEXION & PUERTO\n// ======================================================================================================\n\n// IMPORTANDO TYPE'S & RESOLVERS'S\n// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\nconst server = new ApolloServer({ typeDefs, resolvers });\n    \n\n// PUERTO\n//Middleware para conectar Apollo Server\nconst PORT = process.env.PORT || '4000';\n\n// The `listen` method launches a web server.\nserver.listen(PORT).then(({ url }) => {\n    console.log(` ðŸš€ Servidor corriendo en: ðŸš€ ${url}`);\n  });\n\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1599058341000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _types = _interopRequireDefault(require(\"./src/types\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./src/resolvers\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Apollo Server solo (Sin express)\n//const { ApolloServer } = require('apollo-server');        // Uso cuando no se tiene instalado babel\n// ======================================= IMPORT TYPES =================================================\n// ======================================================================================================\n// ====================================== IMPORT RESOLVERS =================================================\n// ======================================================================================================\n// CONEXION & PUERTO\n// ======================================================================================================\n// IMPORTANDO TYPE'S & RESOLVERS'S\n// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\nvar server = new _apolloServer.ApolloServer({\n  typeDefs: _types[\"default\"],\n  resolvers: _resolvers[\"default\"]\n}); // PUERTO\n//Middleware para conectar Apollo Server\n\nvar PORT = process.env.PORT || '4000'; // The `listen` method launches a web server.\n\nserver.listen(PORT).then(function (_ref) {\n  var url = _ref.url;\n  console.log(\" \\uD83D\\uDE80 Servidor corriendo en: \\uD83D\\uDE80 \".concat(url));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlcnZlciIsIkFwb2xsb1NlcnZlciIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iLCJ0aGVuIiwidXJsIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFLQTs7QUFJQTs7OztBQVZBO0FBRUE7QUFHQTtBQUVBO0FBRUE7QUFFQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsMEJBQUosQ0FBaUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFSQSxpQkFBRjtBQUFZQyxFQUFBQSxTQUFTLEVBQVRBO0FBQVosQ0FBakIsQ0FBZixDLENBR0E7QUFDQTs7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLElBQW9CLE1BQWpDLEMsQ0FFQTs7QUFDQUosTUFBTSxDQUFDTyxNQUFQLENBQWNILElBQWQsRUFBb0JJLElBQXBCLENBQXlCLGdCQUFhO0FBQUEsTUFBVkMsR0FBVSxRQUFWQSxHQUFVO0FBQ2xDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsNkRBQTZDRixHQUE3QztBQUNELENBRkgiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5kcmVzL05DL0NPVVJTRVMvY291cnNlLWdyYXBocWwvZXhlcmNpc2VzL2FwaS1uZXdzb2Z0LWNvbXB1dGVyLyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gQXBvbGxvIFNlcnZlciBzb2xvIChTaW4gZXhwcmVzcylcbmltcG9ydCB7IEFwb2xsb1NlcnZlciB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXInO1xuLy9jb25zdCB7IEFwb2xsb1NlcnZlciB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlcicpOyAgICAgICAgLy8gVXNvIGN1YW5kbyBubyBzZSB0aWVuZSBpbnN0YWxhZG8gYmFiZWxcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gSU1QT1JUIFRZUEVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCB0eXBlRGVmcyBmcm9tICcuL3NyYy90eXBlcyc7XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gSU1QT1JUIFJFU09MVkVSUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vc3JjL3Jlc29sdmVycyc7XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyBDT05FWElPTiAmIFBVRVJUT1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIElNUE9SVEFORE8gVFlQRSdTICYgUkVTT0xWRVJTJ1Ncbi8vIFRoZSBBcG9sbG9TZXJ2ZXIgY29uc3RydWN0b3IgcmVxdWlyZXMgdHdvIHBhcmFtZXRlcnM6IHlvdXIgc2NoZW1hXG4vLyBkZWZpbml0aW9uIGFuZCB5b3VyIHNldCBvZiByZXNvbHZlcnMuXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHsgdHlwZURlZnMsIHJlc29sdmVycyB9KTtcbiAgICBcblxuLy8gUFVFUlRPXG4vL01pZGRsZXdhcmUgcGFyYSBjb25lY3RhciBBcG9sbG8gU2VydmVyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAnNDAwMCc7XG5cbi8vIFRoZSBgbGlzdGVuYCBtZXRob2QgbGF1bmNoZXMgYSB3ZWIgc2VydmVyLlxuc2VydmVyLmxpc3RlbihQT1JUKS50aGVuKCh7IHVybCB9KSA9PiB7XG4gICAgY29uc29sZS5sb2coYCDwn5qAIFNlcnZpZG9yIGNvcnJpZW5kbyBlbjog8J+agCAke3VybH1gKTtcbiAgfSk7XG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "server",
        "ApolloServer",
        "typeDefs",
        "resolvers",
        "PORT",
        "process",
        "env",
        "listen",
        "then",
        "url",
        "console",
        "log"
      ],
      "mappings": ";;AAEA;;AAKA;;AAIA;;;;AAVA;AAEA;AAGA;AAEA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA,IAAMA,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAAEC,EAAAA,QAAQ,EAARA,iBAAF;AAAYC,EAAAA,SAAS,EAATA;AAAZ,CAAjB,CAAf,C,CAGA;AACA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,MAAjC,C,CAEA;;AACAJ,MAAM,CAACO,MAAP,CAAcH,IAAd,EAAoBI,IAApB,CAAyB,gBAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAClCC,EAAAA,OAAO,CAACC,GAAR,6DAA6CF,GAA7C;AACD,CAFH",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/",
      "sourcesContent": [
        "\n// Apollo Server solo (Sin express)\nimport { ApolloServer } from 'apollo-server';\n//const { ApolloServer } = require('apollo-server');        // Uso cuando no se tiene instalado babel\n\n\n// ======================================= IMPORT TYPES =================================================\nimport typeDefs from './src/types';\n// ======================================================================================================\n\n// ====================================== IMPORT RESOLVERS =================================================\nimport resolvers from './src/resolvers';\n// ======================================================================================================\n\n\n// CONEXION & PUERTO\n// ======================================================================================================\n\n// IMPORTANDO TYPE'S & RESOLVERS'S\n// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\nconst server = new ApolloServer({ typeDefs, resolvers });\n    \n\n// PUERTO\n//Middleware para conectar Apollo Server\nconst PORT = process.env.PORT || '4000';\n\n// The `listen` method launches a web server.\nserver.listen(PORT).then(({ url }) => {\n    console.log(` ðŸš€ Servidor corriendo en: ðŸš€ ${url}`);\n  });\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599058341000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _mergeGraphqlSchemas = require(\"merge-graphql-schemas\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// ./graphql/typeDefs.js\n// Deprecated\n//import { mergeTypeDefs } from 'graphql-tools';\n//import { loadFilesSync } from 'graphql-tools';\nvar typesArray = (0, _mergeGraphqlSchemas.fileLoader)(_path[\"default\"].join(__dirname, './'));\n\nvar _default = (0, _mergeGraphqlSchemas.mergeTypes)(typesArray, {\n  all: true\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInR5cGVzQXJyYXkiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImFsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUNBOzs7O0FBRkE7QUFFc0U7QUFDdEU7QUFDQTtBQUVBLElBQU1BLFVBQVUsR0FBRyxxQ0FBV0MsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixJQUFyQixDQUFYLENBQW5COztlQUVlLHFDQUFXSCxVQUFYLEVBQXVCO0FBQUVJLEVBQUFBLEdBQUcsRUFBRTtBQUFQLENBQXZCLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5kcmVzL05DL0NPVVJTRVMvY291cnNlLWdyYXBocWwvZXhlcmNpc2VzL2FwaS1uZXdzb2Z0LWNvbXB1dGVyL3NyYy90eXBlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIC4vZ3JhcGhxbC90eXBlRGVmcy5qc1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBmaWxlTG9hZGVyLCBtZXJnZVR5cGVzIH0gZnJvbSAnbWVyZ2UtZ3JhcGhxbC1zY2hlbWFzJzsgICAgICAgLy8gRGVwcmVjYXRlZFxuLy9pbXBvcnQgeyBtZXJnZVR5cGVEZWZzIH0gZnJvbSAnZ3JhcGhxbC10b29scyc7XG4vL2ltcG9ydCB7IGxvYWRGaWxlc1N5bmMgfSBmcm9tICdncmFwaHFsLXRvb2xzJztcblxuY29uc3QgdHlwZXNBcnJheSA9IGZpbGVMb2FkZXIocGF0aC5qb2luKF9fZGlybmFtZSwgJy4vJykpO1xuXG5leHBvcnQgZGVmYXVsdCBtZXJnZVR5cGVzKHR5cGVzQXJyYXksIHsgYWxsOiB0cnVlIH0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "typesArray",
        "path",
        "join",
        "__dirname",
        "all"
      ],
      "mappings": ";;;;;;;AAEA;;AACA;;;;AAFA;AAEsE;AACtE;AACA;AAEA,IAAMA,UAAU,GAAG,qCAAWC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAX,CAAnB;;eAEe,qCAAWH,UAAX,EAAuB;AAAEI,EAAAA,GAAG,EAAE;AAAP,CAAvB,C",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/types/",
      "sourcesContent": [
        "\n// ./graphql/typeDefs.js\nimport path from 'path';\nimport { fileLoader, mergeTypes } from 'merge-graphql-schemas';       // Deprecated\n//import { mergeTypeDefs } from 'graphql-tools';\n//import { loadFilesSync } from 'graphql-tools';\n\nconst typesArray = fileLoader(path.join(__dirname, './'));\n\nexport default mergeTypes(typesArray, { all: true });"
      ]
    },
    "sourceType": "script",
    "mtime": 1617037083000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _mergeGraphqlSchemas = require(\"merge-graphql-schemas\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// ./graphql/typeDefs.js\nvar typesArray = (0, _mergeGraphqlSchemas.fileLoader)(_path[\"default\"].join(__dirname, './'));\n\nvar _default = (0, _mergeGraphqlSchemas.mergeResolvers)(typesArray, {\n  all: true\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInR5cGVzQXJyYXkiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImFsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUNBOzs7O0FBRkE7QUFJQSxJQUFNQSxVQUFVLEdBQUcscUNBQVdDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsSUFBckIsQ0FBWCxDQUFuQjs7ZUFFZSx5Q0FBZUgsVUFBZixFQUEyQjtBQUFFSSxFQUFBQSxHQUFHLEVBQUU7QUFBUCxDQUEzQixDIiwic291cmNlUm9vdCI6Ii9ob21lL2FuZHJlcy9OQy9DT1VSU0VTL2NvdXJzZS1ncmFwaHFsL2V4ZXJjaXNlcy9hcGktbmV3c29mdC1jb21wdXRlci9zcmMvcmVzb2x2ZXJzLyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gLi9ncmFwaHFsL3R5cGVEZWZzLmpzXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGZpbGVMb2FkZXIsIG1lcmdlUmVzb2x2ZXJzIH0gZnJvbSAnbWVyZ2UtZ3JhcGhxbC1zY2hlbWFzJztcblxuY29uc3QgdHlwZXNBcnJheSA9IGZpbGVMb2FkZXIocGF0aC5qb2luKF9fZGlybmFtZSwgJy4vJykpO1xuXG5leHBvcnQgZGVmYXVsdCBtZXJnZVJlc29sdmVycyh0eXBlc0FycmF5LCB7IGFsbDogdHJ1ZSB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "typesArray",
        "path",
        "join",
        "__dirname",
        "all"
      ],
      "mappings": ";;;;;;;AAEA;;AACA;;;;AAFA;AAIA,IAAMA,UAAU,GAAG,qCAAWC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAX,CAAnB;;eAEe,yCAAeH,UAAf,EAA2B;AAAEI,EAAAA,GAAG,EAAE;AAAP,CAA3B,C",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "\n// ./graphql/typeDefs.js\nimport path from 'path';\nimport { fileLoader, mergeResolvers } from 'merge-graphql-schemas';\n\nconst typesArray = fileLoader(path.join(__dirname, './'));\n\nexport default mergeResolvers(typesArray, { all: true });"
      ]
    },
    "sourceType": "script",
    "mtime": 1599009403000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientes.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientes.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverClientes.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _schemaClientes = require(\"../schema/schemaClientes.js\");\n\nvar _assert = require(\"assert\");\n\n//import mongoose from 'mongoose';\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // ==================================================================================================================\n  // modelClientesSchema\n  // ==================================================================================================================\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientes)\n    getClientes: function getClientes() {\n      return _schemaClientes.modelClientesSchema.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n    getClientesLimite: function getClientesLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaClientes.modelClientesSchema.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getClienteID: function getClienteID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesSchema.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearCliente: function crearCliente(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoCliente = new _schemaClientes.modelClientesSchema({\n        created_at: input.created_at,\n        documenttype: input.documenttype,\n        document: input.document,\n        company: input.company,\n        phones: input.phones,\n        emails: input.emails,\n        web: input.web,\n        address: input.address,\n        bloq_pta: input.bloq_pta,\n        cp: input.cp,\n        city: input.city,\n        state: input.state,\n        country: input.country,\n        currency: input.currency,\n        language: input.language,\n        payment_terms: input.payment_terms,\n        notes: input.notes,\n        notes_private: input.notes_private,\n        company_size: input.company_size,\n        industry: input.industry,\n        contacts: input.contacts,\n        status: input.status\n      }); // Propiedad del id\n\n      nuevoCliente.id = nuevoCliente._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoCliente.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoCliente); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarCliente: function editarCliente(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesSchema.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarCliente: function eliminarCliente(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Clientes.remove   // Se puede usar remove tambien\n        _schemaClientes.modelClientesSchema.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  } // ==================================================================================================================\n\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVyQ2xpZW50ZXMuanMiXSwibmFtZXMiOlsicmVzb2x2ZXJzIiwiUXVlcnkiLCJnZXRDbGllbnRlcyIsIm1vZGVsQ2xpZW50ZXNTY2hlbWEiLCJmaW5kIiwiZ2V0Q2xpZW50ZXNMaW1pdGUiLCJyb290IiwibGltaXRlIiwibGltaXQiLCJnZXRDbGllbnRlSUQiLCJpZCIsIlByb21pc2UiLCJyZXNvbHZlIiwib2JqZWN0IiwiZmluZEJ5SWQiLCJlcnJvciIsInVzZXIiLCJNdXRhdGlvbiIsImNyZWFyQ2xpZW50ZSIsImlucHV0IiwibnVldm9DbGllbnRlIiwiY3JlYXRlZF9hdCIsImRvY3VtZW50dHlwZSIsImRvY3VtZW50IiwiY29tcGFueSIsInBob25lcyIsImVtYWlscyIsIndlYiIsImFkZHJlc3MiLCJibG9xX3B0YSIsImNwIiwiY2l0eSIsInN0YXRlIiwiY291bnRyeSIsImN1cnJlbmN5IiwibGFuZ3VhZ2UiLCJwYXltZW50X3Rlcm1zIiwibm90ZXMiLCJub3Rlc19wcml2YXRlIiwiY29tcGFueV9zaXplIiwiaW5kdXN0cnkiLCJjb250YWN0cyIsInN0YXR1cyIsIl9pZCIsIk9iamVjdCIsInNhdmUiLCJlZGl0YXJDbGllbnRlIiwiZmluZE9uZUFuZFVwZGF0ZSIsImVsaW1pbmFyQ2xpZW50ZSIsImZpbmRPbmVBbmRSZW1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFGQTtBQU1BO0FBQ08sSUFBTUEsU0FBUyxHQUFHO0FBR3JCO0FBQ0E7QUFDQTtBQUVBO0FBQ0FDLEVBQUFBLEtBQUssRUFBRTtBQUNIO0FBQ0FDLElBQUFBLFdBQVcsRUFBRSx1QkFBTTtBQUNmLGFBQU9DLG9DQUFvQkMsSUFBcEIsQ0FBeUIsRUFBekIsQ0FBUDtBQUNILEtBSkU7QUFLSDtBQUNBQyxJQUFBQSxpQkFBaUIsRUFBRSwyQkFBQ0MsSUFBRCxRQUFvQjtBQUFBLFVBQVpDLE1BQVksUUFBWkEsTUFBWTtBQUNuQyxhQUFPSixvQ0FBb0JDLElBQXBCLENBQXlCLEVBQXpCLEVBQTZCSSxLQUE3QixDQUFtQ0QsTUFBbkMsQ0FBUDtBQUNILEtBUkU7QUFTSDtBQUNBRSxJQUFBQSxZQUFZLEVBQUcsc0JBQUNILElBQUQsU0FBZ0I7QUFBQSxVQUFSSSxFQUFRLFNBQVJBLEVBQVE7QUFDM0IsYUFBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDViw0Q0FBb0JXLFFBQXBCLENBQTZCSixFQUE3QixFQUFpQyxVQUFDSyxLQUFELEVBQVFDLElBQVIsRUFBaUI7QUFDOUMsY0FBR0QsS0FBSCxFQUFVLHFCQUFRQSxLQUFSLEVBQVYsS0FDS0gsT0FBTyxDQUFDSSxJQUFELENBQVA7QUFDUixTQUhEO0FBSUgsT0FMTSxDQUFQO0FBTUg7QUFqQkUsR0FSYztBQTRCckJDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxZQUFZLEVBQUcsc0JBQUNaLElBQUQsU0FBbUI7QUFBQSxVQUFYYSxLQUFXLFNBQVhBLEtBQVc7QUFDOUIsVUFBTUMsWUFBWSxHQUFHLElBQUlqQixtQ0FBSixDQUF5QjtBQUMxQ2tCLFFBQUFBLFVBQVUsRUFBRUYsS0FBSyxDQUFDRSxVQUR3QjtBQUUxQ0MsUUFBQUEsWUFBWSxFQUFFSCxLQUFLLENBQUNHLFlBRnNCO0FBRzFDQyxRQUFBQSxRQUFRLEVBQUVKLEtBQUssQ0FBQ0ksUUFIMEI7QUFJMUNDLFFBQUFBLE9BQU8sRUFBRUwsS0FBSyxDQUFDSyxPQUoyQjtBQUsxQ0MsUUFBQUEsTUFBTSxFQUFFTixLQUFLLENBQUNNLE1BTDRCO0FBTTFDQyxRQUFBQSxNQUFNLEVBQUVQLEtBQUssQ0FBQ08sTUFONEI7QUFPMUNDLFFBQUFBLEdBQUcsRUFBRVIsS0FBSyxDQUFDUSxHQVArQjtBQVExQ0MsUUFBQUEsT0FBTyxFQUFFVCxLQUFLLENBQUNTLE9BUjJCO0FBUzFDQyxRQUFBQSxRQUFRLEVBQUVWLEtBQUssQ0FBQ1UsUUFUMEI7QUFVMUNDLFFBQUFBLEVBQUUsRUFBRVgsS0FBSyxDQUFDVyxFQVZnQztBQVcxQ0MsUUFBQUEsSUFBSSxFQUFHWixLQUFLLENBQUNZLElBWDZCO0FBWTFDQyxRQUFBQSxLQUFLLEVBQUViLEtBQUssQ0FBQ2EsS0FaNkI7QUFhMUNDLFFBQUFBLE9BQU8sRUFBRWQsS0FBSyxDQUFDYyxPQWIyQjtBQWMxQ0MsUUFBQUEsUUFBUSxFQUFFZixLQUFLLENBQUNlLFFBZDBCO0FBZTFDQyxRQUFBQSxRQUFRLEVBQUVoQixLQUFLLENBQUNnQixRQWYwQjtBQWdCMUNDLFFBQUFBLGFBQWEsRUFBRWpCLEtBQUssQ0FBQ2lCLGFBaEJxQjtBQWlCMUNDLFFBQUFBLEtBQUssRUFBRWxCLEtBQUssQ0FBQ2tCLEtBakI2QjtBQWtCMUNDLFFBQUFBLGFBQWEsRUFBRW5CLEtBQUssQ0FBQ21CLGFBbEJxQjtBQW1CMUNDLFFBQUFBLFlBQVksRUFBRXBCLEtBQUssQ0FBQ29CLFlBbkJzQjtBQW9CMUNDLFFBQUFBLFFBQVEsRUFBRXJCLEtBQUssQ0FBQ3FCLFFBcEIwQjtBQXFCMUNDLFFBQUFBLFFBQVEsRUFBRXRCLEtBQUssQ0FBQ3NCLFFBckIwQjtBQXNCMUNDLFFBQUFBLE1BQU0sRUFBRXZCLEtBQUssQ0FBQ3VCO0FBdEI0QixPQUF6QixDQUFyQixDQUQ4QixDQXlCOUI7O0FBQ0F0QixNQUFBQSxZQUFZLENBQUNWLEVBQWIsR0FBa0JVLFlBQVksQ0FBQ3VCLEdBQS9CLENBMUI4QixDQTRCOUI7O0FBQ0EsYUFBTyxJQUFJaEMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVWdDLE1BQVYsRUFBcUI7QUFDcEN4QixRQUFBQSxZQUFZLENBQUN5QixJQUFiLENBQWtCLFVBQUM5QixLQUFELEVBQVc7QUFBTztBQUNoQyxjQUFHQSxLQUFILEVBQVUscUJBQVFBLEtBQVIsRUFBVixDQUFnQztBQUFoQyxlQUNLSCxPQUFPLENBQUNRLFlBQUQsQ0FBUCxDQUZvQixDQUVPO0FBQ25DLFNBSEQ7QUFJSCxPQUxNLENBQVA7QUFNSCxLQXBDSztBQXFDTjBCLElBQUFBLGFBQWEsRUFBRSx1QkFBQ3hDLElBQUQsU0FBbUI7QUFBQSxVQUFYYSxLQUFXLFNBQVhBLEtBQVc7QUFDOUIsYUFBTyxJQUFJUixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDViw0Q0FBb0I0QyxnQkFBcEIsQ0FBcUM7QUFBRUosVUFBQUEsR0FBRyxFQUFFeEIsS0FBSyxDQUFDVDtBQUFiLFNBQXJDLEVBQXVEUyxLQUF2RCxFQUE4RDtBQUFDLGlCQUFLO0FBQU4sU0FBOUQsRUFBMkUsVUFBQ0osS0FBRCxFQUFRQyxJQUFSLEVBQWlCO0FBQ3hGLGNBQUdELEtBQUgsRUFBVSxxQkFBUUEsS0FBUixFQUFWLEtBQ0tILE9BQU8sQ0FBQ0ksSUFBRCxDQUFQO0FBQ1IsU0FIRDtBQUlILE9BTE0sQ0FBUDtBQU1ILEtBNUNLO0FBNkNOZ0MsSUFBQUEsZUFBZSxFQUFFLHlCQUFDMUMsSUFBRCxTQUFnQjtBQUFBLFVBQVJJLEVBQVEsU0FBUkEsRUFBUTtBQUM3QixhQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcEM7QUFDQVYsNENBQW9COEMsZ0JBQXBCLENBQXFDO0FBQUNOLFVBQUFBLEdBQUcsRUFBRWpDO0FBQU4sU0FBckMsRUFBZ0QsVUFBQ0ssS0FBRCxFQUFXO0FBQ3ZELGNBQUlBLEtBQUosRUFBVyxxQkFBUUEsS0FBUixFQUFYLEtBQ0tILE9BQU8sQ0FBQywwQkFBRCxDQUFQO0FBQ1IsU0FIRDtBQUlILE9BTk0sQ0FBUDtBQU9IO0FBckRLLEdBNUJXLENBbUZyQjs7QUFuRnFCLENBQWxCIiwic291cmNlUm9vdCI6Ii9ob21lL2FuZHJlcy9OQy9DT1VSU0VTL2NvdXJzZS1ncmFwaHFsL2V4ZXJjaXNlcy9hcGktbmV3c29mdC1jb21wdXRlci9zcmMvcmVzb2x2ZXJzLyIsInNvdXJjZXNDb250ZW50IjpbIi8vaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB7bW9kZWxDbGllbnRlc1NjaGVtYX0gZnJvbSAnLi4vc2NoZW1hL3NjaGVtYUNsaWVudGVzLmpzJztcbmltcG9ydCB7IHJlamVjdHMgfSBmcm9tICdhc3NlcnQnO1xuXG5cblxuLy8gRXhwb3J0IE51ZXZvIGNvbiBzY2hlbWEuZ3JhcGhxbCwgR3JhcGhRTCBUb29scyB5IEdyYXBoUUwgSW1wb3J0XG5leHBvcnQgY29uc3QgcmVzb2x2ZXJzID0ge1xuXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBtb2RlbENsaWVudGVzU2NoZW1hXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgICAvLyBRdWVyeSB5IE11dGF0aW9uIEZ1bmNpb25lcyBkZSBHcmFwaFFMIFRvb2xzIHBhcmEgaGFjZXIgTWFwZW9cbiAgICBRdWVyeToge1xuICAgICAgICAvLyBSZXNvbHZlciBwYXJhIG9idGVuZXIgdG9kb3MgbG9zIGNsaWVudGVzIChnZXRDbGllbnRlcylcbiAgICAgICAgZ2V0Q2xpZW50ZXM6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBtb2RlbENsaWVudGVzU2NoZW1hLmZpbmQoe30pXG4gICAgICAgIH0sXG4gICAgICAgIC8vIFJlc29sdmVyIHBhcmEgb2J0ZW5lciBjbGllbnRlcyBjb24gdW4gbGltaXRlIGRlIHJlZ2lzdHJvcyAoZ2V0Q2xpZW50ZXNMaW1pdGUpXG4gICAgICAgIGdldENsaWVudGVzTGltaXRlOiAocm9vdCwge2xpbWl0ZX0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBtb2RlbENsaWVudGVzU2NoZW1hLmZpbmQoe30pLmxpbWl0KGxpbWl0ZSlcbiAgICAgICAgfSxcbiAgICAgICAgLy8gUmVzb2x2ZXIgcGFyYSBvYnRlbmVyIHVuIGNsaWVudGUgcG9yIHN1IGlkIChnZXRDbGllbnRlKVxuICAgICAgICBnZXRDbGllbnRlSUQgOiAocm9vdCwge2lkfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBtb2RlbENsaWVudGVzU2NoZW1hLmZpbmRCeUlkKGlkLCAoZXJyb3IsIHVzZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3IpIHJlamVjdHMoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZSh1c2VyKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfSxcblxuICAgIE11dGF0aW9uOiB7XG4gICAgICAgIGNyZWFyQ2xpZW50ZSA6IChyb290LCB7aW5wdXR9KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBudWV2b0NsaWVudGUgPSBuZXcgbW9kZWxDbGllbnRlc1NjaGVtYSAoe1xuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IGlucHV0LmNyZWF0ZWRfYXQsXG4gICAgICAgICAgICAgICAgZG9jdW1lbnR0eXBlOiBpbnB1dC5kb2N1bWVudHR5cGUsXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQ6IGlucHV0LmRvY3VtZW50LFxuICAgICAgICAgICAgICAgIGNvbXBhbnk6IGlucHV0LmNvbXBhbnksXG4gICAgICAgICAgICAgICAgcGhvbmVzOiBpbnB1dC5waG9uZXMsXG4gICAgICAgICAgICAgICAgZW1haWxzOiBpbnB1dC5lbWFpbHMsXG4gICAgICAgICAgICAgICAgd2ViOiBpbnB1dC53ZWIsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogaW5wdXQuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBibG9xX3B0YTogaW5wdXQuYmxvcV9wdGEsXG4gICAgICAgICAgICAgICAgY3A6IGlucHV0LmNwLFxuICAgICAgICAgICAgICAgIGNpdHkgOiBpbnB1dC5jaXR5LFxuICAgICAgICAgICAgICAgIHN0YXRlOiBpbnB1dC5zdGF0ZSxcbiAgICAgICAgICAgICAgICBjb3VudHJ5OiBpbnB1dC5jb3VudHJ5LFxuICAgICAgICAgICAgICAgIGN1cnJlbmN5OiBpbnB1dC5jdXJyZW5jeSxcbiAgICAgICAgICAgICAgICBsYW5ndWFnZTogaW5wdXQubGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgcGF5bWVudF90ZXJtczogaW5wdXQucGF5bWVudF90ZXJtcyxcbiAgICAgICAgICAgICAgICBub3RlczogaW5wdXQubm90ZXMsXG4gICAgICAgICAgICAgICAgbm90ZXNfcHJpdmF0ZTogaW5wdXQubm90ZXNfcHJpdmF0ZSxcbiAgICAgICAgICAgICAgICBjb21wYW55X3NpemU6IGlucHV0LmNvbXBhbnlfc2l6ZSxcbiAgICAgICAgICAgICAgICBpbmR1c3RyeTogaW5wdXQuaW5kdXN0cnksXG4gICAgICAgICAgICAgICAgY29udGFjdHM6IGlucHV0LmNvbnRhY3RzLFxuICAgICAgICAgICAgICAgIHN0YXR1czogaW5wdXQuc3RhdHVzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIFByb3BpZWRhZCBkZWwgaWRcbiAgICAgICAgICAgIG51ZXZvQ2xpZW50ZS5pZCA9IG51ZXZvQ2xpZW50ZS5faWQ7XG5cbiAgICAgICAgICAgIC8vIENvbiBlbCBQcm9taXNlIGd1YXJkYW1vcyBlbiBsYSBiYXNlIGRlIGRhdG9zIGRlIE1vbmdvREJcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgT2JqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgbnVldm9DbGllbnRlLnNhdmUoKGVycm9yKSA9PiB7ICAgICAgLy8gU2UgaGFjZSB1biBDYWxsQmFjayBwYXJhIHNhYmVyIHNpIHNlIGluc2VydG8gbyBubyBzZSBpbnNlcnRvIGVsIHJlZ2lzdHJvXG4gICAgICAgICAgICAgICAgICAgIGlmKGVycm9yKSByZWplY3RzKGVycm9yKSAgICAgICAgLy8gU2kgaGF5IGVycm9yIGhhY2Vtb3MgdW4gcmVqZWN0cyBsbyBub3MgbXVlc3RyYSBlbiBjb25zb2xhXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZShudWV2b0NsaWVudGUpICAgICAgLy8gRGUgbG8gY29udHJhcmlvIGhhY2Vtb3MgdW4gcmVzb2x2ZSB5IEd1YXJkYXJpYVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVkaXRhckNsaWVudGU6IChyb290LCB7aW5wdXR9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIG9iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIG1vZGVsQ2xpZW50ZXNTY2hlbWEuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogaW5wdXQuaWR9LCBpbnB1dCwge25ldzogdHJ1ZX0sIChlcnJvciwgdXNlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZihlcnJvcikgcmVqZWN0cyhlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXNvbHZlKHVzZXIpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZWxpbWluYXJDbGllbnRlOiAocm9vdCwge2lkfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAvL0NsaWVudGVzLnJlbW92ZSAgIC8vIFNlIHB1ZWRlIHVzYXIgcmVtb3ZlIHRhbWJpZW5cbiAgICAgICAgICAgICAgICBtb2RlbENsaWVudGVzU2NoZW1hLmZpbmRPbmVBbmRSZW1vdmUoe19pZDogaWR9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSByZWplY3RzKGVycm9yKVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHJlc29sdmUoXCJTZSBlbGltaW5vIGNvcnJlY3RhbWVudGVcIilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSxcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolverClientes.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getClientes",
        "modelClientesSchema",
        "find",
        "getClientesLimite",
        "root",
        "limite",
        "limit",
        "getClienteID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearCliente",
        "input",
        "nuevoCliente",
        "created_at",
        "documenttype",
        "document",
        "company",
        "phones",
        "emails",
        "web",
        "address",
        "bloq_pta",
        "cp",
        "city",
        "state",
        "country",
        "currency",
        "language",
        "payment_terms",
        "notes",
        "notes_private",
        "company_size",
        "industry",
        "contacts",
        "status",
        "_id",
        "Object",
        "save",
        "editarCliente",
        "findOneAndUpdate",
        "eliminarCliente",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AAFA;AAMA;AACO,IAAMA,SAAS,GAAG;AAGrB;AACA;AACA;AAEA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,WAAW,EAAE,uBAAM;AACf,aAAOC,oCAAoBC,IAApB,CAAyB,EAAzB,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,iBAAiB,EAAE,2BAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AACnC,aAAOJ,oCAAoBC,IAApB,CAAyB,EAAzB,EAA6BI,KAA7B,CAAmCD,MAAnC,CAAP;AACH,KARE;AASH;AACAE,IAAAA,YAAY,EAAG,sBAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AAC3B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,4CAAoBW,QAApB,CAA6BJ,EAA7B,EAAiC,UAACK,KAAD,EAAQC,IAAR,EAAiB;AAC9C,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GARc;AA4BrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAG,sBAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAC9B,UAAMC,YAAY,GAAG,IAAIjB,mCAAJ,CAAyB;AAC1CkB,QAAAA,UAAU,EAAEF,KAAK,CAACE,UADwB;AAE1CC,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAFsB;AAG1CC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAH0B;AAI1CC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAJ2B;AAK1CC,QAAAA,MAAM,EAAEN,KAAK,CAACM,MAL4B;AAM1CC,QAAAA,MAAM,EAAEP,KAAK,CAACO,MAN4B;AAO1CC,QAAAA,GAAG,EAAER,KAAK,CAACQ,GAP+B;AAQ1CC,QAAAA,OAAO,EAAET,KAAK,CAACS,OAR2B;AAS1CC,QAAAA,QAAQ,EAAEV,KAAK,CAACU,QAT0B;AAU1CC,QAAAA,EAAE,EAAEX,KAAK,CAACW,EAVgC;AAW1CC,QAAAA,IAAI,EAAGZ,KAAK,CAACY,IAX6B;AAY1CC,QAAAA,KAAK,EAAEb,KAAK,CAACa,KAZ6B;AAa1CC,QAAAA,OAAO,EAAEd,KAAK,CAACc,OAb2B;AAc1CC,QAAAA,QAAQ,EAAEf,KAAK,CAACe,QAd0B;AAe1CC,QAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QAf0B;AAgB1CC,QAAAA,aAAa,EAAEjB,KAAK,CAACiB,aAhBqB;AAiB1CC,QAAAA,KAAK,EAAElB,KAAK,CAACkB,KAjB6B;AAkB1CC,QAAAA,aAAa,EAAEnB,KAAK,CAACmB,aAlBqB;AAmB1CC,QAAAA,YAAY,EAAEpB,KAAK,CAACoB,YAnBsB;AAoB1CC,QAAAA,QAAQ,EAAErB,KAAK,CAACqB,QApB0B;AAqB1CC,QAAAA,QAAQ,EAAEtB,KAAK,CAACsB,QArB0B;AAsB1CC,QAAAA,MAAM,EAAEvB,KAAK,CAACuB;AAtB4B,OAAzB,CAArB,CAD8B,CAyB9B;;AACAtB,MAAAA,YAAY,CAACV,EAAb,GAAkBU,YAAY,CAACuB,GAA/B,CA1B8B,CA4B9B;;AACA,aAAO,IAAIhC,OAAJ,CAAY,UAACC,OAAD,EAAUgC,MAAV,EAAqB;AACpCxB,QAAAA,YAAY,CAACyB,IAAb,CAAkB,UAAC9B,KAAD,EAAW;AAAO;AAChC,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,YAAD,CAAP,CAFoB,CAEO;AACnC,SAHD;AAIH,OALM,CAAP;AAMH,KApCK;AAqCN0B,IAAAA,aAAa,EAAE,uBAACxC,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAC9B,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,4CAAoB4C,gBAApB,CAAqC;AAAEJ,UAAAA,GAAG,EAAExB,KAAK,CAACT;AAAb,SAArC,EAAuDS,KAAvD,EAA8D;AAAC,iBAAK;AAAN,SAA9D,EAA2E,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AACxF,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KA5CK;AA6CNgC,IAAAA,eAAe,EAAE,yBAAC1C,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AAC7B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,4CAAoB8C,gBAApB,CAAqC;AAACN,UAAAA,GAAG,EAAEjC;AAAN,SAArC,EAAgD,UAACK,KAAD,EAAW;AACvD,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AArDK,GA5BW,CAmFrB;;AAnFqB,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "//import mongoose from 'mongoose';\nimport {modelClientesSchema} from '../schema/schemaClientes.js';\nimport { rejects } from 'assert';\n\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n\n\n    // ==================================================================================================================\n    // modelClientesSchema\n    // ==================================================================================================================\n\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientes)\n        getClientes: () => {\n            return modelClientesSchema.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n        getClientesLimite: (root, {limite}) => {\n            return modelClientesSchema.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getClienteID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelClientesSchema.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearCliente : (root, {input}) => {\n            const nuevoCliente = new modelClientesSchema ({\n                created_at: input.created_at,\n                documenttype: input.documenttype,\n                document: input.document,\n                company: input.company,\n                phones: input.phones,\n                emails: input.emails,\n                web: input.web,\n                address: input.address,\n                bloq_pta: input.bloq_pta,\n                cp: input.cp,\n                city : input.city,\n                state: input.state,\n                country: input.country,\n                currency: input.currency,\n                language: input.language,\n                payment_terms: input.payment_terms,\n                notes: input.notes,\n                notes_private: input.notes_private,\n                company_size: input.company_size,\n                industry: input.industry,\n                contacts: input.contacts,\n                status: input.status\n            });\n            // Propiedad del id\n            nuevoCliente.id = nuevoCliente._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoCliente.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoCliente)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarCliente: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelClientesSchema.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarCliente: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Clientes.remove   // Se puede usar remove tambien\n                modelClientesSchema.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    },\n    // ==================================================================================================================\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860735000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaClientes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaClientes.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaClientes.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaClientes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
        "sourceFileName": "schemaClientes.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modelClientesContactosSchema = exports.modelClientesConfigurationSchema = exports.modelClientesDireccionSchema = exports.modelClientesSchema = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Crear la conexion\n_mongoose[\"default\"].Promise = global.Promise;\n\n_mongoose[\"default\"].set('useUnifiedTopology', true); // Conexion\n\n\n_mongoose[\"default\"].connect('mongodb+srv://andresganc:mmdaa12345@nc-mongodb-clusternc-fggwa.gcp.mongodb.net/nc-system?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}); // SCHEMA CLIENTES\n// customerSchema\n\n\nvar customerSchema = new _mongoose.Schema({\n  created_at: String,\n  documenttype: String,\n  document: String,\n  name: String,\n  lastname: String,\n  company: String,\n  phones: String,\n  emails: String,\n  web: String,\n  address: String,\n  bloq_pta: String,\n  cp: String,\n  city: String,\n  country: String,\n  status: String,\n  currency: String,\n  language: String,\n  payment_terms: String,\n  notes: String,\n  notes_private: String,\n  company_size: String,\n  industry: String,\n  contacts: Array,\n  state: String\n}); // customerAddressSchema\n\nvar customerAddressSchema = new _mongoose.Schema({\n  created_at: String,\n  address: String,\n  bloq_pta: String,\n  cp: String,\n  city: String,\n  state: String,\n  country: String\n}); // customerConfigurationSchema\n\nvar customerConfigurationSchema = new _mongoose.Schema({\n  created_at: String,\n  currency: String,\n  language: String,\n  payment_terms: String,\n  notes: String,\n  notes_private: String,\n  company_size: String,\n  industry: String\n}); // customerContactSchema\n\nvar customerContactSchema = new _mongoose.Schema({\n  created_at: String,\n  documenttype: String,\n  document: String,\n  name: String,\n  lastname: String,\n  phones: String,\n  emails: String,\n  address: String,\n  state: String,\n  country: String\n}); // MODELOS (Nombre de Tablas)\n// Model customers\n\nvar modelClientesSchema = (0, _mongoose.model)('customers', customerSchema); // Model customers_address\n\nexports.modelClientesSchema = modelClientesSchema;\nvar modelClientesDireccionSchema = (0, _mongoose.model)('customers_address', customerAddressSchema); // Model customers_Configuration\n\nexports.modelClientesDireccionSchema = modelClientesDireccionSchema;\nvar modelClientesConfigurationSchema = (0, _mongoose.model)('customers_configuration', customerConfigurationSchema); // Model customers_contact\n\nexports.modelClientesConfigurationSchema = modelClientesConfigurationSchema;\nvar modelClientesContactosSchema = (0, _mongoose.model)('customers_contact', customerContactSchema);\nexports.modelClientesContactosSchema = modelClientesContactosSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYUNsaWVudGVzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsInNldCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJjdXN0b21lclNjaGVtYSIsIlNjaGVtYSIsImNyZWF0ZWRfYXQiLCJTdHJpbmciLCJkb2N1bWVudHR5cGUiLCJkb2N1bWVudCIsIm5hbWUiLCJsYXN0bmFtZSIsImNvbXBhbnkiLCJwaG9uZXMiLCJlbWFpbHMiLCJ3ZWIiLCJhZGRyZXNzIiwiYmxvcV9wdGEiLCJjcCIsImNpdHkiLCJjb3VudHJ5Iiwic3RhdHVzIiwiY3VycmVuY3kiLCJsYW5ndWFnZSIsInBheW1lbnRfdGVybXMiLCJub3RlcyIsIm5vdGVzX3ByaXZhdGUiLCJjb21wYW55X3NpemUiLCJpbmR1c3RyeSIsImNvbnRhY3RzIiwiQXJyYXkiLCJzdGF0ZSIsImN1c3RvbWVyQWRkcmVzc1NjaGVtYSIsImN1c3RvbWVyQ29uZmlndXJhdGlvblNjaGVtYSIsImN1c3RvbWVyQ29udGFjdFNjaGVtYSIsIm1vZGVsQ2xpZW50ZXNTY2hlbWEiLCJtb2RlbENsaWVudGVzRGlyZWNjaW9uU2NoZW1hIiwibW9kZWxDbGllbnRlc0NvbmZpZ3VyYXRpb25TY2hlbWEiLCJtb2RlbENsaWVudGVzQ29udGFjdG9zU2NoZW1hIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7O0FBR0E7QUFDQUEscUJBQVNDLE9BQVQsR0FBbUJDLE1BQU0sQ0FBQ0QsT0FBMUI7O0FBRUFELHFCQUFTRyxHQUFULENBQWEsb0JBQWIsRUFBbUMsSUFBbkMsRSxDQUVBOzs7QUFDQUgscUJBQVNJLE9BQVQsQ0FBaUIsc0hBQWpCLEVBQXlJO0FBQUNDLEVBQUFBLGVBQWUsRUFBRTtBQUFsQixDQUF6SSxFLENBR0E7QUFFQTs7O0FBQ0EsSUFBTUMsY0FBYyxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDOUJDLEVBQUFBLFVBQVUsRUFBRUMsTUFEa0I7QUFFOUJDLEVBQUFBLFlBQVksRUFBRUQsTUFGZ0I7QUFHOUJFLEVBQUFBLFFBQVEsRUFBRUYsTUFIb0I7QUFJOUJHLEVBQUFBLElBQUksRUFBRUgsTUFKd0I7QUFLOUJJLEVBQUFBLFFBQVEsRUFBRUosTUFMb0I7QUFNOUJLLEVBQUFBLE9BQU8sRUFBRUwsTUFOcUI7QUFPOUJNLEVBQUFBLE1BQU0sRUFBRU4sTUFQc0I7QUFROUJPLEVBQUFBLE1BQU0sRUFBRVAsTUFSc0I7QUFTOUJRLEVBQUFBLEdBQUcsRUFBRVIsTUFUeUI7QUFVOUJTLEVBQUFBLE9BQU8sRUFBRVQsTUFWcUI7QUFXOUJVLEVBQUFBLFFBQVEsRUFBRVYsTUFYb0I7QUFZOUJXLEVBQUFBLEVBQUUsRUFBRVgsTUFaMEI7QUFhOUJZLEVBQUFBLElBQUksRUFBRVosTUFid0I7QUFjOUJhLEVBQUFBLE9BQU8sRUFBRWIsTUFkcUI7QUFlOUJjLEVBQUFBLE1BQU0sRUFBRWQsTUFmc0I7QUFnQjlCZSxFQUFBQSxRQUFRLEVBQUVmLE1BaEJvQjtBQWlCOUJnQixFQUFBQSxRQUFRLEVBQUVoQixNQWpCb0I7QUFrQjlCaUIsRUFBQUEsYUFBYSxFQUFFakIsTUFsQmU7QUFtQjlCa0IsRUFBQUEsS0FBSyxFQUFFbEIsTUFuQnVCO0FBb0I5Qm1CLEVBQUFBLGFBQWEsRUFBRW5CLE1BcEJlO0FBcUI5Qm9CLEVBQUFBLFlBQVksRUFBRXBCLE1BckJnQjtBQXNCOUJxQixFQUFBQSxRQUFRLEVBQUVyQixNQXRCb0I7QUF1QjlCc0IsRUFBQUEsUUFBUSxFQUFFQyxLQXZCb0I7QUF3QjlCQyxFQUFBQSxLQUFLLEVBQUV4QjtBQXhCdUIsQ0FBWCxDQUF2QixDLENBNEJBOztBQUNBLElBQU15QixxQkFBcUIsR0FBRyxJQUFJM0IsZ0JBQUosQ0FBWTtBQUN0Q0MsRUFBQUEsVUFBVSxFQUFFQyxNQUQwQjtBQUV0Q1MsRUFBQUEsT0FBTyxFQUFFVCxNQUY2QjtBQUd0Q1UsRUFBQUEsUUFBUSxFQUFFVixNQUg0QjtBQUl0Q1csRUFBQUEsRUFBRSxFQUFFWCxNQUprQztBQUt0Q1ksRUFBQUEsSUFBSSxFQUFFWixNQUxnQztBQU10Q3dCLEVBQUFBLEtBQUssRUFBRXhCLE1BTitCO0FBT3RDYSxFQUFBQSxPQUFPLEVBQUViO0FBUDZCLENBQVosQ0FBOUIsQyxDQVVBOztBQUNBLElBQU0wQiwyQkFBMkIsR0FBRyxJQUFJNUIsZ0JBQUosQ0FBWTtBQUM1Q0MsRUFBQUEsVUFBVSxFQUFFQyxNQURnQztBQUU1Q2UsRUFBQUEsUUFBUSxFQUFFZixNQUZrQztBQUc1Q2dCLEVBQUFBLFFBQVEsRUFBRWhCLE1BSGtDO0FBSTVDaUIsRUFBQUEsYUFBYSxFQUFFakIsTUFKNkI7QUFLNUNrQixFQUFBQSxLQUFLLEVBQUVsQixNQUxxQztBQU01Q21CLEVBQUFBLGFBQWEsRUFBRW5CLE1BTjZCO0FBTzVDb0IsRUFBQUEsWUFBWSxFQUFFcEIsTUFQOEI7QUFRNUNxQixFQUFBQSxRQUFRLEVBQUVyQjtBQVJrQyxDQUFaLENBQXBDLEMsQ0FXQTs7QUFDQSxJQUFNMkIscUJBQXFCLEdBQUcsSUFBSTdCLGdCQUFKLENBQVk7QUFDdENDLEVBQUFBLFVBQVUsRUFBRUMsTUFEMEI7QUFFdENDLEVBQUFBLFlBQVksRUFBRUQsTUFGd0I7QUFHdENFLEVBQUFBLFFBQVEsRUFBRUYsTUFINEI7QUFJdENHLEVBQUFBLElBQUksRUFBRUgsTUFKZ0M7QUFLdENJLEVBQUFBLFFBQVEsRUFBRUosTUFMNEI7QUFNdENNLEVBQUFBLE1BQU0sRUFBRU4sTUFOOEI7QUFPdENPLEVBQUFBLE1BQU0sRUFBRVAsTUFQOEI7QUFRdENTLEVBQUFBLE9BQU8sRUFBRVQsTUFSNkI7QUFTdEN3QixFQUFBQSxLQUFLLEVBQUV4QixNQVQrQjtBQVV0Q2EsRUFBQUEsT0FBTyxFQUFFYjtBQVY2QixDQUFaLENBQTlCLEMsQ0FjQTtBQUVBOztBQUNBLElBQU00QixtQkFBbUIsR0FBRyxxQkFBTSxXQUFOLEVBQW1CL0IsY0FBbkIsQ0FBNUIsQyxDQUNBOzs7QUFDQSxJQUFNZ0MsNEJBQTRCLEdBQUcscUJBQU0sbUJBQU4sRUFBMkJKLHFCQUEzQixDQUFyQyxDLENBQ0E7OztBQUNBLElBQU1LLGdDQUFnQyxHQUFHLHFCQUFNLHlCQUFOLEVBQWlDSiwyQkFBakMsQ0FBekMsQyxDQUNBOzs7QUFDQSxJQUFNSyw0QkFBNEIsR0FBRyxxQkFBTSxtQkFBTixFQUEyQkoscUJBQTNCLENBQXJDIiwic291cmNlUm9vdCI6Ii9ob21lL2FuZHJlcy9OQy9DT1VSU0VTL2NvdXJzZS1ncmFwaHFsL2V4ZXJjaXNlcy9hcGktbmV3c29mdC1jb21wdXRlci9zcmMvc2NoZW1hLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQge1NjaGVtYSwgbW9kZWx9IGZyb20gJ21vbmdvb3NlJztcblxuLy8gQ3JlYXIgbGEgY29uZXhpb25cbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcblxubW9uZ29vc2Uuc2V0KCd1c2VVbmlmaWVkVG9wb2xvZ3knLCB0cnVlKTtcblxuLy8gQ29uZXhpb25cbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vYW5kcmVzZ2FuYzptbWRhYTEyMzQ1QG5jLW1vbmdvZGItY2x1c3Rlcm5jLWZnZ3dhLmdjcC5tb25nb2RiLm5ldC9uYy1zeXN0ZW0/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Jywge3VzZU5ld1VybFBhcnNlcjogdHJ1ZX0pO1xuXG5cbi8vIFNDSEVNQSBDTElFTlRFU1xuXG4vLyBjdXN0b21lclNjaGVtYVxuY29uc3QgY3VzdG9tZXJTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICBjcmVhdGVkX2F0OiBTdHJpbmcsXG4gICAgZG9jdW1lbnR0eXBlOiBTdHJpbmcsXG4gICAgZG9jdW1lbnQ6IFN0cmluZyxcbiAgICBuYW1lOiBTdHJpbmcsXG4gICAgbGFzdG5hbWU6IFN0cmluZyxcbiAgICBjb21wYW55OiBTdHJpbmcsXG4gICAgcGhvbmVzOiBTdHJpbmcsXG4gICAgZW1haWxzOiBTdHJpbmcsXG4gICAgd2ViOiBTdHJpbmcsXG4gICAgYWRkcmVzczogU3RyaW5nLFxuICAgIGJsb3FfcHRhOiBTdHJpbmcsXG4gICAgY3A6IFN0cmluZyxcbiAgICBjaXR5OiBTdHJpbmcsXG4gICAgY291bnRyeTogU3RyaW5nLFxuICAgIHN0YXR1czogU3RyaW5nLFxuICAgIGN1cnJlbmN5OiBTdHJpbmcsXG4gICAgbGFuZ3VhZ2U6IFN0cmluZyxcbiAgICBwYXltZW50X3Rlcm1zOiBTdHJpbmcsXG4gICAgbm90ZXM6IFN0cmluZyxcbiAgICBub3Rlc19wcml2YXRlOiBTdHJpbmcsXG4gICAgY29tcGFueV9zaXplOiBTdHJpbmcsXG4gICAgaW5kdXN0cnk6IFN0cmluZyxcbiAgICBjb250YWN0czogQXJyYXksXG4gICAgc3RhdGU6IFN0cmluZ1xuICAgIFxufSlcblxuLy8gY3VzdG9tZXJBZGRyZXNzU2NoZW1hXG5jb25zdCBjdXN0b21lckFkZHJlc3NTY2hlbWEgPSBuZXcgU2NoZW1hICh7XG4gICAgY3JlYXRlZF9hdDogU3RyaW5nLFxuICAgIGFkZHJlc3M6IFN0cmluZyxcbiAgICBibG9xX3B0YTogU3RyaW5nLFxuICAgIGNwOiBTdHJpbmcsXG4gICAgY2l0eTogU3RyaW5nLFxuICAgIHN0YXRlOiBTdHJpbmcsXG4gICAgY291bnRyeTogU3RyaW5nXG59KVxuXG4vLyBjdXN0b21lckNvbmZpZ3VyYXRpb25TY2hlbWFcbmNvbnN0IGN1c3RvbWVyQ29uZmlndXJhdGlvblNjaGVtYSA9IG5ldyBTY2hlbWEgKHtcbiAgICBjcmVhdGVkX2F0OiBTdHJpbmcsXG4gICAgY3VycmVuY3k6IFN0cmluZyxcbiAgICBsYW5ndWFnZTogU3RyaW5nLFxuICAgIHBheW1lbnRfdGVybXM6IFN0cmluZyxcbiAgICBub3RlczogU3RyaW5nLFxuICAgIG5vdGVzX3ByaXZhdGU6IFN0cmluZyxcbiAgICBjb21wYW55X3NpemU6IFN0cmluZyxcbiAgICBpbmR1c3RyeTogU3RyaW5nXG59KVxuXG4vLyBjdXN0b21lckNvbnRhY3RTY2hlbWFcbmNvbnN0IGN1c3RvbWVyQ29udGFjdFNjaGVtYSA9IG5ldyBTY2hlbWEgKHtcbiAgICBjcmVhdGVkX2F0OiBTdHJpbmcsXG4gICAgZG9jdW1lbnR0eXBlOiBTdHJpbmcsXG4gICAgZG9jdW1lbnQ6IFN0cmluZyxcbiAgICBuYW1lOiBTdHJpbmcsXG4gICAgbGFzdG5hbWU6IFN0cmluZyxcbiAgICBwaG9uZXM6IFN0cmluZyxcbiAgICBlbWFpbHM6IFN0cmluZyxcbiAgICBhZGRyZXNzOiBTdHJpbmcsXG4gICAgc3RhdGU6IFN0cmluZyxcbiAgICBjb3VudHJ5OiBTdHJpbmdcbn0pXG5cblxuLy8gTU9ERUxPUyAoTm9tYnJlIGRlIFRhYmxhcylcblxuLy8gTW9kZWwgY3VzdG9tZXJzXG5jb25zdCBtb2RlbENsaWVudGVzU2NoZW1hID0gbW9kZWwoJ2N1c3RvbWVycycsIGN1c3RvbWVyU2NoZW1hKTtcbi8vIE1vZGVsIGN1c3RvbWVyc19hZGRyZXNzXG5jb25zdCBtb2RlbENsaWVudGVzRGlyZWNjaW9uU2NoZW1hID0gbW9kZWwoJ2N1c3RvbWVyc19hZGRyZXNzJywgY3VzdG9tZXJBZGRyZXNzU2NoZW1hKTtcbi8vIE1vZGVsIGN1c3RvbWVyc19Db25maWd1cmF0aW9uXG5jb25zdCBtb2RlbENsaWVudGVzQ29uZmlndXJhdGlvblNjaGVtYSA9IG1vZGVsKCdjdXN0b21lcnNfY29uZmlndXJhdGlvbicsIGN1c3RvbWVyQ29uZmlndXJhdGlvblNjaGVtYSk7XG4vLyBNb2RlbCBjdXN0b21lcnNfY29udGFjdFxuY29uc3QgbW9kZWxDbGllbnRlc0NvbnRhY3Rvc1NjaGVtYSA9IG1vZGVsKCdjdXN0b21lcnNfY29udGFjdCcsIGN1c3RvbWVyQ29udGFjdFNjaGVtYSk7XG5cbmV4cG9ydCB7bW9kZWxDbGllbnRlc1NjaGVtYSwgbW9kZWxDbGllbnRlc0RpcmVjY2lvblNjaGVtYSwgbW9kZWxDbGllbnRlc0NvbmZpZ3VyYXRpb25TY2hlbWEsIG1vZGVsQ2xpZW50ZXNDb250YWN0b3NTY2hlbWF9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schemaClientes.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "set",
        "connect",
        "useNewUrlParser",
        "customerSchema",
        "Schema",
        "created_at",
        "String",
        "documenttype",
        "document",
        "name",
        "lastname",
        "company",
        "phones",
        "emails",
        "web",
        "address",
        "bloq_pta",
        "cp",
        "city",
        "country",
        "status",
        "currency",
        "language",
        "payment_terms",
        "notes",
        "notes_private",
        "company_size",
        "industry",
        "contacts",
        "Array",
        "state",
        "customerAddressSchema",
        "customerConfigurationSchema",
        "customerContactSchema",
        "modelClientesSchema",
        "modelClientesDireccionSchema",
        "modelClientesConfigurationSchema",
        "modelClientesContactosSchema"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;;;AAGA;AACAA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AAEAD,qBAASG,GAAT,CAAa,oBAAb,EAAmC,IAAnC,E,CAEA;;;AACAH,qBAASI,OAAT,CAAiB,sHAAjB,EAAyI;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAzI,E,CAGA;AAEA;;;AACA,IAAMC,cAAc,GAAG,IAAIC,gBAAJ,CAAW;AAC9BC,EAAAA,UAAU,EAAEC,MADkB;AAE9BC,EAAAA,YAAY,EAAED,MAFgB;AAG9BE,EAAAA,QAAQ,EAAEF,MAHoB;AAI9BG,EAAAA,IAAI,EAAEH,MAJwB;AAK9BI,EAAAA,QAAQ,EAAEJ,MALoB;AAM9BK,EAAAA,OAAO,EAAEL,MANqB;AAO9BM,EAAAA,MAAM,EAAEN,MAPsB;AAQ9BO,EAAAA,MAAM,EAAEP,MARsB;AAS9BQ,EAAAA,GAAG,EAAER,MATyB;AAU9BS,EAAAA,OAAO,EAAET,MAVqB;AAW9BU,EAAAA,QAAQ,EAAEV,MAXoB;AAY9BW,EAAAA,EAAE,EAAEX,MAZ0B;AAa9BY,EAAAA,IAAI,EAAEZ,MAbwB;AAc9Ba,EAAAA,OAAO,EAAEb,MAdqB;AAe9Bc,EAAAA,MAAM,EAAEd,MAfsB;AAgB9Be,EAAAA,QAAQ,EAAEf,MAhBoB;AAiB9BgB,EAAAA,QAAQ,EAAEhB,MAjBoB;AAkB9BiB,EAAAA,aAAa,EAAEjB,MAlBe;AAmB9BkB,EAAAA,KAAK,EAAElB,MAnBuB;AAoB9BmB,EAAAA,aAAa,EAAEnB,MApBe;AAqB9BoB,EAAAA,YAAY,EAAEpB,MArBgB;AAsB9BqB,EAAAA,QAAQ,EAAErB,MAtBoB;AAuB9BsB,EAAAA,QAAQ,EAAEC,KAvBoB;AAwB9BC,EAAAA,KAAK,EAAExB;AAxBuB,CAAX,CAAvB,C,CA4BA;;AACA,IAAMyB,qBAAqB,GAAG,IAAI3B,gBAAJ,CAAY;AACtCC,EAAAA,UAAU,EAAEC,MAD0B;AAEtCS,EAAAA,OAAO,EAAET,MAF6B;AAGtCU,EAAAA,QAAQ,EAAEV,MAH4B;AAItCW,EAAAA,EAAE,EAAEX,MAJkC;AAKtCY,EAAAA,IAAI,EAAEZ,MALgC;AAMtCwB,EAAAA,KAAK,EAAExB,MAN+B;AAOtCa,EAAAA,OAAO,EAAEb;AAP6B,CAAZ,CAA9B,C,CAUA;;AACA,IAAM0B,2BAA2B,GAAG,IAAI5B,gBAAJ,CAAY;AAC5CC,EAAAA,UAAU,EAAEC,MADgC;AAE5Ce,EAAAA,QAAQ,EAAEf,MAFkC;AAG5CgB,EAAAA,QAAQ,EAAEhB,MAHkC;AAI5CiB,EAAAA,aAAa,EAAEjB,MAJ6B;AAK5CkB,EAAAA,KAAK,EAAElB,MALqC;AAM5CmB,EAAAA,aAAa,EAAEnB,MAN6B;AAO5CoB,EAAAA,YAAY,EAAEpB,MAP8B;AAQ5CqB,EAAAA,QAAQ,EAAErB;AARkC,CAAZ,CAApC,C,CAWA;;AACA,IAAM2B,qBAAqB,GAAG,IAAI7B,gBAAJ,CAAY;AACtCC,EAAAA,UAAU,EAAEC,MAD0B;AAEtCC,EAAAA,YAAY,EAAED,MAFwB;AAGtCE,EAAAA,QAAQ,EAAEF,MAH4B;AAItCG,EAAAA,IAAI,EAAEH,MAJgC;AAKtCI,EAAAA,QAAQ,EAAEJ,MAL4B;AAMtCM,EAAAA,MAAM,EAAEN,MAN8B;AAOtCO,EAAAA,MAAM,EAAEP,MAP8B;AAQtCS,EAAAA,OAAO,EAAET,MAR6B;AAStCwB,EAAAA,KAAK,EAAExB,MAT+B;AAUtCa,EAAAA,OAAO,EAAEb;AAV6B,CAAZ,CAA9B,C,CAcA;AAEA;;AACA,IAAM4B,mBAAmB,GAAG,qBAAM,WAAN,EAAmB/B,cAAnB,CAA5B,C,CACA;;;AACA,IAAMgC,4BAA4B,GAAG,qBAAM,mBAAN,EAA2BJ,qBAA3B,CAArC,C,CACA;;;AACA,IAAMK,gCAAgC,GAAG,qBAAM,yBAAN,EAAiCJ,2BAAjC,CAAzC,C,CACA;;;AACA,IAAMK,4BAA4B,GAAG,qBAAM,mBAAN,EAA2BJ,qBAA3B,CAArC",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport {Schema, model} from 'mongoose';\n\n// Crear la conexion\nmongoose.Promise = global.Promise;\n\nmongoose.set('useUnifiedTopology', true);\n\n// Conexion\nmongoose.connect('mongodb+srv://andresganc:mmdaa12345@nc-mongodb-clusternc-fggwa.gcp.mongodb.net/nc-system?retryWrites=true&w=majority', {useNewUrlParser: true});\n\n\n// SCHEMA CLIENTES\n\n// customerSchema\nconst customerSchema = new Schema({\n    created_at: String,\n    documenttype: String,\n    document: String,\n    name: String,\n    lastname: String,\n    company: String,\n    phones: String,\n    emails: String,\n    web: String,\n    address: String,\n    bloq_pta: String,\n    cp: String,\n    city: String,\n    country: String,\n    status: String,\n    currency: String,\n    language: String,\n    payment_terms: String,\n    notes: String,\n    notes_private: String,\n    company_size: String,\n    industry: String,\n    contacts: Array,\n    state: String\n    \n})\n\n// customerAddressSchema\nconst customerAddressSchema = new Schema ({\n    created_at: String,\n    address: String,\n    bloq_pta: String,\n    cp: String,\n    city: String,\n    state: String,\n    country: String\n})\n\n// customerConfigurationSchema\nconst customerConfigurationSchema = new Schema ({\n    created_at: String,\n    currency: String,\n    language: String,\n    payment_terms: String,\n    notes: String,\n    notes_private: String,\n    company_size: String,\n    industry: String\n})\n\n// customerContactSchema\nconst customerContactSchema = new Schema ({\n    created_at: String,\n    documenttype: String,\n    document: String,\n    name: String,\n    lastname: String,\n    phones: String,\n    emails: String,\n    address: String,\n    state: String,\n    country: String\n})\n\n\n// MODELOS (Nombre de Tablas)\n\n// Model customers\nconst modelClientesSchema = model('customers', customerSchema);\n// Model customers_address\nconst modelClientesDireccionSchema = model('customers_address', customerAddressSchema);\n// Model customers_Configuration\nconst modelClientesConfigurationSchema = model('customers_configuration', customerConfigurationSchema);\n// Model customers_contact\nconst modelClientesContactosSchema = model('customers_contact', customerContactSchema);\n\nexport {modelClientesSchema, modelClientesDireccionSchema, modelClientesConfigurationSchema, modelClientesContactosSchema};"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860728000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesConfiguracion.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesConfiguracion.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesConfiguracion.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesConfiguracion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverClientesConfiguracion.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _schemaClientes = require(\"../schema/schemaClientes.js\");\n\nvar _assert = require(\"assert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // ==================================================================================================================\n  // modelClientesConfigurationSchema\n  // ==================================================================================================================\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientes)\n    getClientesConfiguracion: function getClientesConfiguracion() {\n      return _schemaClientes.modelClientesConfigurationSchema.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n    getClientesConfiguracionLimite: function getClientesConfiguracionLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaClientes.modelClientesConfigurationSchema.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getClienteConfiguracionID: function getClienteConfiguracionID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesConfigurationSchema.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearClienteConfiguracion: function crearClienteConfiguracion(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoClienteConfiguracion = new _schemaClientes.modelClientesConfigurationSchema({\n        created_at: input.created_at,\n        currency: input.currency,\n        language: input.language,\n        payment_terms: input.payment_terms,\n        notes: input.notes,\n        notes_private: input.notes_private,\n        company_size: input.company_size,\n        industry: input.industry\n      }); // Propiedad del id\n\n      nuevoClienteConfiguracion.id = nuevoClienteConfiguracion._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoClienteConfiguracion.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoClienteConfiguracion); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarClienteConfiguracion: function editarClienteConfiguracion(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesConfigurationSchema.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarClienteConfiguracion: function eliminarClienteConfiguracion(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Clientes.remove   // Se puede usar remove tambien\n        _schemaClientes.modelClientesConfigurationSchema.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  } // ==================================================================================================================\n\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolverClientesConfiguracion.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getClientesConfiguracion",
        "modelClientesConfigurationSchema",
        "find",
        "getClientesConfiguracionLimite",
        "root",
        "limite",
        "limit",
        "getClienteConfiguracionID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearClienteConfiguracion",
        "input",
        "nuevoClienteConfiguracion",
        "created_at",
        "currency",
        "language",
        "payment_terms",
        "notes",
        "notes_private",
        "company_size",
        "industry",
        "_id",
        "Object",
        "save",
        "editarClienteConfiguracion",
        "findOneAndUpdate",
        "eliminarClienteConfiguracion",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAIA;AACO,IAAMA,SAAS,GAAG;AAGrB;AACA;AACA;AAEA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,wBAAwB,EAAE,oCAAM;AAC5B,aAAOC,iDAAiCC,IAAjC,CAAsC,EAAtC,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,8BAA8B,EAAE,wCAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AAChD,aAAOJ,iDAAiCC,IAAjC,CAAsC,EAAtC,EAA0CI,KAA1C,CAAgDD,MAAhD,CAAP;AACH,KARE;AASH;AACAE,IAAAA,yBAAyB,EAAG,mCAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACxC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,yDAAiCW,QAAjC,CAA0CJ,EAA1C,EAA8C,UAACK,KAAD,EAAQC,IAAR,EAAiB;AAC3D,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GARc;AA4BrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,yBAAyB,EAAG,mCAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAC3C,UAAMC,yBAAyB,GAAG,IAAIjB,gDAAJ,CAAsC;AACpEkB,QAAAA,UAAU,EAAEF,KAAK,CAACE,UADkD;AAEpEC,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAFoD;AAGpEC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHoD;AAIpEC,QAAAA,aAAa,EAAEL,KAAK,CAACK,aAJ+C;AAKpEC,QAAAA,KAAK,EAAEN,KAAK,CAACM,KALuD;AAMpEC,QAAAA,aAAa,EAAEP,KAAK,CAACO,aAN+C;AAOpEC,QAAAA,YAAY,EAAER,KAAK,CAACQ,YAPgD;AAQpEC,QAAAA,QAAQ,EAAET,KAAK,CAACS;AARoD,OAAtC,CAAlC,CAD2C,CAW3C;;AACAR,MAAAA,yBAAyB,CAACV,EAA1B,GAA+BU,yBAAyB,CAACS,GAAzD,CAZ2C,CAc3C;;AACA,aAAO,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUkB,MAAV,EAAqB;AACpCV,QAAAA,yBAAyB,CAACW,IAA1B,CAA+B,UAAChB,KAAD,EAAW;AAAO;AAC7C,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,yBAAD,CAAP,CAFiC,CAEO;AAChD,SAHD;AAIH,OALM,CAAP;AAMH,KAtBK;AAuBNY,IAAAA,0BAA0B,EAAE,oCAAC1B,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAC3C,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,yDAAiC8B,gBAAjC,CAAkD;AAAEJ,UAAAA,GAAG,EAAEV,KAAK,CAACT;AAAb,SAAlD,EAAoES,KAApE,EAA2E;AAAC,iBAAK;AAAN,SAA3E,EAAwF,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AACrG,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KA9BK;AA+BNkB,IAAAA,4BAA4B,EAAE,sCAAC5B,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AAC1C,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,yDAAiCgC,gBAAjC,CAAkD;AAACN,UAAAA,GAAG,EAAEnB;AAAN,SAAlD,EAA6D,UAACK,KAAD,EAAW;AACpE,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AAvCK,GA5BW,CAqErB;;AArEqB,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport {modelClientesConfigurationSchema} from '../schema/schemaClientes.js';\nimport { rejects } from 'assert';\n\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n\n\n    // ==================================================================================================================\n    // modelClientesConfigurationSchema\n    // ==================================================================================================================\n\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientes)\n        getClientesConfiguracion: () => {\n            return modelClientesConfigurationSchema.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n        getClientesConfiguracionLimite: (root, {limite}) => {\n            return modelClientesConfigurationSchema.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getClienteConfiguracionID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelClientesConfigurationSchema.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearClienteConfiguracion : (root, {input}) => {\n            const nuevoClienteConfiguracion = new modelClientesConfigurationSchema ({\n                created_at: input.created_at,\n                currency: input.currency,\n                language: input.language,\n                payment_terms: input.payment_terms,\n                notes: input.notes,\n                notes_private: input.notes_private,\n                company_size: input.company_size,\n                industry: input.industry\n            });\n            // Propiedad del id\n            nuevoClienteConfiguracion.id = nuevoClienteConfiguracion._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoClienteConfiguracion.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoClienteConfiguracion)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarClienteConfiguracion: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelClientesConfigurationSchema.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarClienteConfiguracion: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Clientes.remove   // Se puede usar remove tambien\n                modelClientesConfigurationSchema.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    },\n    // ==================================================================================================================\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860735000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesContactos.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesContactos.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesContactos.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesContactos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverClientesContactos.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _schemaClientes = require(\"../schema/schemaClientes.js\");\n\nvar _assert = require(\"assert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // ==================================================================================================================\n  // modelClientesContactosSchema\n  // ==================================================================================================================\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientesContactos)\n    getClienteContactos: function getClienteContactos() {\n      return _schemaClientes.modelClientesContactosSchema.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesContactosLimite)\n    getClienteContactosLimite: function getClienteContactosLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaClientes.modelClientesContactosSchema.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getClienteContactoID: function getClienteContactoID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesContactosSchema.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearClienteContactos: function crearClienteContactos(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoClienteContactos = new _schemaClientes.modelClientesContactosSchema({\n        created_at: input.created_at,\n        documenttype: input.documenttype,\n        document: input.document,\n        name: input.name,\n        lastname: input.lastname,\n        phones: input.phones,\n        emails: input.emails,\n        address: input.address,\n        state: input.state,\n        country: input.country\n      }); // Propiedad del id\n\n      nuevoClienteContactos.id = nuevoClienteContactos._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoClienteContactos.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoClienteContactos); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarClienteContactos: function editarClienteContactos(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesContactosSchema.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarClienteContactos: function eliminarClienteContactos(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Clientes.remove   // Se puede usar remove tambien\n        _schemaClientes.modelClientesContactosSchema.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  }\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolverClientesContactos.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getClienteContactos",
        "modelClientesContactosSchema",
        "find",
        "getClienteContactosLimite",
        "root",
        "limite",
        "limit",
        "getClienteContactoID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearClienteContactos",
        "input",
        "nuevoClienteContactos",
        "created_at",
        "documenttype",
        "document",
        "name",
        "lastname",
        "phones",
        "emails",
        "address",
        "state",
        "country",
        "_id",
        "Object",
        "save",
        "editarClienteContactos",
        "findOneAndUpdate",
        "eliminarClienteContactos",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAIA;AACO,IAAMA,SAAS,GAAG;AAGrB;AACA;AACA;AAEA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,mBAAmB,EAAE,+BAAM;AACvB,aAAOC,6CAA6BC,IAA7B,CAAkC,EAAlC,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,yBAAyB,EAAE,mCAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AAC3C,aAAOJ,6CAA6BC,IAA7B,CAAkC,EAAlC,EAAsCI,KAAtC,CAA4CD,MAA5C,CAAP;AACH,KARE;AASH;AACAE,IAAAA,oBAAoB,EAAG,8BAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACnC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,qDAA6BW,QAA7B,CAAsCJ,EAAtC,EAA0C,UAACK,KAAD,EAAQC,IAAR,EAAiB;AACvD,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GARc;AA4BrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,qBAAqB,EAAE,+BAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AACtC,UAAMC,qBAAqB,GAAG,IAAIjB,4CAAJ,CAAkC;AAC5DkB,QAAAA,UAAU,EAAEF,KAAK,CAACE,UAD0C;AAE5DC,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAFwC;AAG5DC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAH4C;AAI5DC,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAJgD;AAK5DC,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAL4C;AAM5DC,QAAAA,MAAM,EAAEP,KAAK,CAACO,MAN8C;AAO5DC,QAAAA,MAAM,EAAER,KAAK,CAACQ,MAP8C;AAQ5DC,QAAAA,OAAO,EAAET,KAAK,CAACS,OAR6C;AAS5DC,QAAAA,KAAK,EAAEV,KAAK,CAACU,KAT+C;AAU5DC,QAAAA,OAAO,EAAEX,KAAK,CAACW;AAV6C,OAAlC,CAA9B,CADsC,CAatC;;AACAV,MAAAA,qBAAqB,CAACV,EAAtB,GAA2BU,qBAAqB,CAACW,GAAjD,CAdsC,CAgBtC;;AACA,aAAO,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUoB,MAAV,EAAqB;AACpCZ,QAAAA,qBAAqB,CAACa,IAAtB,CAA2B,UAAClB,KAAD,EAAW;AAAO;AACzC,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,qBAAD,CAAP,CAF6B,CAEO;AAC5C,SAHD;AAIH,OALM,CAAP;AAMH,KAxBK;AAyBNc,IAAAA,sBAAsB,EAAE,gCAAC5B,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AACvC,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,qDAA6BgC,gBAA7B,CAA8C;AAAEJ,UAAAA,GAAG,EAAEZ,KAAK,CAACT;AAAb,SAA9C,EAAgES,KAAhE,EAAuE;AAAC,iBAAK;AAAN,SAAvE,EAAoF,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AACjG,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KAhCK;AAiCNoB,IAAAA,wBAAwB,EAAE,kCAAC9B,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACtC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,qDAA6BkC,gBAA7B,CAA8C;AAACN,UAAAA,GAAG,EAAErB;AAAN,SAA9C,EAAyD,UAACK,KAAD,EAAW;AAChE,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AAzCK;AA5BW,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport {modelClientesContactosSchema} from '../schema/schemaClientes.js';\nimport { rejects } from 'assert';\n\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n\n\n    // ==================================================================================================================\n    // modelClientesContactosSchema\n    // ==================================================================================================================\n\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientesContactos)\n        getClienteContactos: () => {\n            return modelClientesContactosSchema.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesContactosLimite)\n        getClienteContactosLimite: (root, {limite}) => {\n            return modelClientesContactosSchema.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getClienteContactoID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelClientesContactosSchema.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearClienteContactos: (root, {input}) => {\n            const nuevoClienteContactos = new modelClientesContactosSchema ({\n                created_at: input.created_at,\n                documenttype: input.documenttype,\n                document: input.document,\n                name: input.name,\n                lastname: input.lastname,\n                phones: input.phones,\n                emails: input.emails,\n                address: input.address,\n                state: input.state,\n                country: input.country\n            });\n            // Propiedad del id\n            nuevoClienteContactos.id = nuevoClienteContactos._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoClienteContactos.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoClienteContactos)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarClienteContactos: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelClientesContactosSchema.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarClienteContactos: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Clientes.remove   // Se puede usar remove tambien\n                modelClientesContactosSchema.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    },\n  \n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860735000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesDireccion.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesDireccion.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesDireccion.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverClientesDireccion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverClientesDireccion.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _schemaClientes = require(\"../schema/schemaClientes.js\");\n\nvar _assert = require(\"assert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // ==================================================================================================================\n  // modelClientesDireccionSchema\n  // ==================================================================================================================\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientes)\n    getClientesDireccion: function getClientesDireccion() {\n      return _schemaClientes.modelClientesDireccionSchema.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n    getClientesDireccionLimite: function getClientesDireccionLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaClientes.modelClientesDireccionSchema.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getClienteDireccionID: function getClienteDireccionID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesDireccionSchema.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearClienteDireccion: function crearClienteDireccion(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoClienteDireccion = new _schemaClientes.modelClientesDireccionSchema({\n        created_at: input.created_at,\n        address: input.address,\n        bloq_pta: input.bloq_pta,\n        cp: input.cp,\n        city: input.city,\n        state: input.state,\n        country: input.country\n      }); // Propiedad del id\n\n      nuevoClienteDireccion.id = nuevoClienteDireccion._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoClienteDireccion.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoClienteDireccion); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarClienteDireccion: function editarClienteDireccion(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaClientes.modelClientesDireccionSchema.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarClienteDireccion: function eliminarClienteDireccion(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Clientes.remove   // Se puede usar remove tambien\n        _schemaClientes.modelClientesDireccionSchema.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  }\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolverClientesDireccion.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getClientesDireccion",
        "modelClientesDireccionSchema",
        "find",
        "getClientesDireccionLimite",
        "root",
        "limite",
        "limit",
        "getClienteDireccionID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearClienteDireccion",
        "input",
        "nuevoClienteDireccion",
        "created_at",
        "address",
        "bloq_pta",
        "cp",
        "city",
        "state",
        "country",
        "_id",
        "Object",
        "save",
        "editarClienteDireccion",
        "findOneAndUpdate",
        "eliminarClienteDireccion",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAIA;AACO,IAAMA,SAAS,GAAG;AAGrB;AACA;AACA;AACA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,oBAAoB,EAAE,gCAAM;AACxB,aAAOC,6CAA6BC,IAA7B,CAAkC,EAAlC,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,0BAA0B,EAAE,oCAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AAC5C,aAAOJ,6CAA6BC,IAA7B,CAAkC,EAAlC,EAAsCI,KAAtC,CAA4CD,MAA5C,CAAP;AACH,KARE;AASH;AACAE,IAAAA,qBAAqB,EAAG,+BAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACpC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,qDAA6BW,QAA7B,CAAsCJ,EAAtC,EAA0C,UAACK,KAAD,EAAQC,IAAR,EAAiB;AACvD,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GAPc;AA2BrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,qBAAqB,EAAG,+BAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AACvC,UAAMC,qBAAqB,GAAG,IAAIjB,4CAAJ,CAAkC;AAC5DkB,QAAAA,UAAU,EAAGF,KAAK,CAACE,UADyC;AAE5DC,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAF6C;AAG5DC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAH4C;AAI5DC,QAAAA,EAAE,EAAEL,KAAK,CAACK,EAJkD;AAK5DC,QAAAA,IAAI,EAAGN,KAAK,CAACM,IAL+C;AAM5DC,QAAAA,KAAK,EAAEP,KAAK,CAACO,KAN+C;AAO5DC,QAAAA,OAAO,EAAER,KAAK,CAACQ;AAP6C,OAAlC,CAA9B,CADuC,CAUvC;;AACAP,MAAAA,qBAAqB,CAACV,EAAtB,GAA2BU,qBAAqB,CAACQ,GAAjD,CAXuC,CAavC;;AACA,aAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUiB,MAAV,EAAqB;AACpCT,QAAAA,qBAAqB,CAACU,IAAtB,CAA2B,UAACf,KAAD,EAAW;AAAO;AACzC,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,qBAAD,CAAP,CAF6B,CAEO;AAC5C,SAHD;AAIH,OALM,CAAP;AAMH,KArBK;AAsBNW,IAAAA,sBAAsB,EAAE,gCAACzB,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AACvC,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,qDAA6B6B,gBAA7B,CAA8C;AAAEJ,UAAAA,GAAG,EAAET,KAAK,CAACT;AAAb,SAA9C,EAAgES,KAAhE,EAAuE;AAAC,iBAAK;AAAN,SAAvE,EAAoF,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AACjG,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KA7BK;AA8BNiB,IAAAA,wBAAwB,EAAE,kCAAC3B,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACtC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,qDAA6B+B,gBAA7B,CAA8C;AAACN,UAAAA,GAAG,EAAElB;AAAN,SAA9C,EAAyD,UAACK,KAAD,EAAW;AAChE,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AAtCK;AA3BW,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport {modelClientesSchema, modelClientesDireccionSchema, modelClientesConfigurationSchema, modelClientesContactosSchema} from '../schema/schemaClientes.js';\nimport { rejects } from 'assert';\n\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n\n\n    // ==================================================================================================================\n    // modelClientesDireccionSchema\n    // ==================================================================================================================\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientes)\n        getClientesDireccion: () => {\n            return modelClientesDireccionSchema.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n        getClientesDireccionLimite: (root, {limite}) => {\n            return modelClientesDireccionSchema.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getClienteDireccionID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelClientesDireccionSchema.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearClienteDireccion : (root, {input}) => {\n            const nuevoClienteDireccion = new modelClientesDireccionSchema ({\n                created_at : input.created_at,\n                address: input.address,\n                bloq_pta: input.bloq_pta,\n                cp: input.cp,\n                city : input.city,\n                state: input.state,\n                country: input.country\n            });\n            // Propiedad del id\n            nuevoClienteDireccion.id = nuevoClienteDireccion._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoClienteDireccion.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoClienteDireccion)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarClienteDireccion: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelClientesDireccionSchema.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarClienteDireccion: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Clientes.remove   // Se puede usar remove tambien\n                modelClientesDireccionSchema.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    }\n\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860735000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedores.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedores.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedores.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedores.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverProveedores.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _schemaProveedores = require(\"../schema/schemaProveedores.js\");\n\nvar _assert = require(\"assert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // ==================================================================================================================\n  // modelProveedoresSchema\n  // ==================================================================================================================\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientes)\n    getProveedores: function getProveedores() {\n      return _schemaProveedores.modelProveedoresSchema.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n    getProveedoresLimite: function getProveedoresLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaProveedores.modelProveedoresSchema.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getProveedorID: function getProveedorID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaProveedores.modelProveedoresSchema.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearProveedor: function crearProveedor(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoProveedor = new _schemaProveedores.modelProveedoresSchema({\n        created_at: input.created_at,\n        documenttype: input.documenttype,\n        document: input.document,\n        company: input.company,\n        phones: input.phones,\n        emails: input.emails,\n        web: input.web,\n        status: input.status\n      }); // Propiedad del id\n\n      nuevoProveedor.id = nuevoProveedor._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoProveedor.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoProveedor); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarProveedor: function editarProveedor(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaProveedores.modelProveedoresSchema.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarProveedor: function eliminarProveedor(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Proveedores.remove   // Se puede usar remove tambien\n        _schemaProveedores.modelProveedoresSchema.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  } // ==================================================================================================================\n\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolverProveedores.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getProveedores",
        "modelProveedoresSchema",
        "find",
        "getProveedoresLimite",
        "root",
        "limite",
        "limit",
        "getProveedorID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearProveedor",
        "input",
        "nuevoProveedor",
        "created_at",
        "documenttype",
        "document",
        "company",
        "phones",
        "emails",
        "web",
        "status",
        "_id",
        "Object",
        "save",
        "editarProveedor",
        "findOneAndUpdate",
        "eliminarProveedor",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAIA;AACO,IAAMA,SAAS,GAAG;AAGrB;AACA;AACA;AAEA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,cAAc,EAAE,0BAAM;AAClB,aAAOC,0CAAuBC,IAAvB,CAA4B,EAA5B,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,oBAAoB,EAAE,8BAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AACtC,aAAOJ,0CAAuBC,IAAvB,CAA4B,EAA5B,EAAgCI,KAAhC,CAAsCD,MAAtC,CAAP;AACH,KARE;AASH;AACAE,IAAAA,cAAc,EAAG,wBAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AAC7B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,kDAAuBW,QAAvB,CAAgCJ,EAAhC,EAAoC,UAACK,KAAD,EAAQC,IAAR,EAAiB;AACjD,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GARc;AA4BrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAG,wBAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAChC,UAAMC,cAAc,GAAG,IAAIjB,yCAAJ,CAA4B;AAC/CkB,QAAAA,UAAU,EAAEF,KAAK,CAACE,UAD6B;AAE/CC,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAF2B;AAG/CC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAH+B;AAI/CC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAJgC;AAK/CC,QAAAA,MAAM,EAAEN,KAAK,CAACM,MALiC;AAM/CC,QAAAA,MAAM,EAAEP,KAAK,CAACO,MANiC;AAO/CC,QAAAA,GAAG,EAAER,KAAK,CAACQ,GAPoC;AAQ/CC,QAAAA,MAAM,EAAET,KAAK,CAACS;AARiC,OAA5B,CAAvB,CADgC,CAWhC;;AACAR,MAAAA,cAAc,CAACV,EAAf,GAAoBU,cAAc,CAACS,GAAnC,CAZgC,CAchC;;AACA,aAAO,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUkB,MAAV,EAAqB;AACpCV,QAAAA,cAAc,CAACW,IAAf,CAAoB,UAAChB,KAAD,EAAW;AAAO;AAClC,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,cAAD,CAAP,CAFsB,CAEO;AACrC,SAHD;AAIH,OALM,CAAP;AAMH,KAtBK;AAuBNY,IAAAA,eAAe,EAAE,yBAAC1B,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAChC,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,kDAAuB8B,gBAAvB,CAAwC;AAAEJ,UAAAA,GAAG,EAAEV,KAAK,CAACT;AAAb,SAAxC,EAA0DS,KAA1D,EAAiE;AAAC,iBAAK;AAAN,SAAjE,EAA8E,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AAC3F,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KA9BK;AA+BNkB,IAAAA,iBAAiB,EAAE,2BAAC5B,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AAC/B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,kDAAuBgC,gBAAvB,CAAwC;AAACN,UAAAA,GAAG,EAAEnB;AAAN,SAAxC,EAAmD,UAACK,KAAD,EAAW;AAC1D,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AAvCK,GA5BW,CAqErB;;AArEqB,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport { modelProveedoresSchema } from '../schema/schemaProveedores.js';\nimport { rejects } from 'assert';\n\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n\n\n    // ==================================================================================================================\n    // modelProveedoresSchema\n    // ==================================================================================================================\n\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientes)\n        getProveedores: () => {\n            return modelProveedoresSchema.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n        getProveedoresLimite: (root, {limite}) => {\n            return modelProveedoresSchema.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getProveedorID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelProveedoresSchema.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearProveedor : (root, {input}) => {\n            const nuevoProveedor = new modelProveedoresSchema ({\n                created_at: input.created_at,\n                documenttype: input.documenttype,\n                document: input.document,\n                company: input.company,\n                phones: input.phones,\n                emails: input.emails,\n                web: input.web,\n                status: input.status\n            });\n            // Propiedad del id\n            nuevoProveedor.id = nuevoProveedor._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoProveedor.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoProveedor)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarProveedor: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelProveedoresSchema.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarProveedor: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Proveedores.remove   // Se puede usar remove tambien\n                modelProveedoresSchema.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    },\n    // ==================================================================================================================\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860792000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaProveedores.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaProveedores.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaProveedores.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaProveedores.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
        "sourceFileName": "schemaProveedores.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modelProveedoresDireccionSchema = exports.modelProveedoresSchema = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Crear la conexion\n_mongoose[\"default\"].Promise = global.Promise;\n\n_mongoose[\"default\"].set('useUnifiedTopology', true); // Conexion\n\n\n_mongoose[\"default\"].connect('mongodb+srv://andresganc:mmdaa12345@nc-mongodb-clusternc-fggwa.gcp.mongodb.net/nc-system?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}); // SCHEMA PROVEEDORES (SUPPLIER)\n// supplierSchema\n\n\nvar supplierSchema = new _mongoose.Schema({\n  created_at: String,\n  documenttype: String,\n  document: String,\n  company: String,\n  phones: String,\n  emails: String,\n  web: String,\n  status: String\n}); // supplierAddressSchema\n\nvar supplierAddressSchema = new _mongoose.Schema({\n  created_at: String,\n  address: String,\n  bloq_pta: String,\n  cp: String,\n  city: String,\n  state: String,\n  country: String\n}); // customerConfigurationSchema\n\nvar supplierConfigurationSchema = new _mongoose.Schema({\n  created_at: String,\n  currency: String,\n  language: String,\n  payment_terms: String,\n  notes: String,\n  notes_private: String,\n  company_size: String,\n  industry: String\n}); // customerContactSchema\n\nvar supplierContactSchema = new _mongoose.Schema({\n  created_at: String,\n  documenttype: String,\n  document: String,\n  name: String,\n  lastname: String,\n  phones: String,\n  emails: String,\n  address: String,\n  state: String,\n  country: String\n}); // MODELOS (Nombre de Tablas)\n// Model customers\n\nvar modelProveedoresSchema = (0, _mongoose.model)('supplier', supplierSchema); // Model customers_address\n\nexports.modelProveedoresSchema = modelProveedoresSchema;\nvar modelProveedoresDireccionSchema = (0, _mongoose.model)('supplier_address', supplierAddressSchema); // Model customers_Configuration\n\nexports.modelProveedoresDireccionSchema = modelProveedoresDireccionSchema;\nvar modelProveedoresConfigurationSchema = (0, _mongoose.model)('supplier_configuration', supplierConfigurationSchema); // Model customers_contact\n\nvar modelProveedoresContactosSchema = (0, _mongoose.model)('supplier_contact', supplierContactSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYVByb3ZlZWRvcmVzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsInNldCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJzdXBwbGllclNjaGVtYSIsIlNjaGVtYSIsImNyZWF0ZWRfYXQiLCJTdHJpbmciLCJkb2N1bWVudHR5cGUiLCJkb2N1bWVudCIsImNvbXBhbnkiLCJwaG9uZXMiLCJlbWFpbHMiLCJ3ZWIiLCJzdGF0dXMiLCJzdXBwbGllckFkZHJlc3NTY2hlbWEiLCJhZGRyZXNzIiwiYmxvcV9wdGEiLCJjcCIsImNpdHkiLCJzdGF0ZSIsImNvdW50cnkiLCJzdXBwbGllckNvbmZpZ3VyYXRpb25TY2hlbWEiLCJjdXJyZW5jeSIsImxhbmd1YWdlIiwicGF5bWVudF90ZXJtcyIsIm5vdGVzIiwibm90ZXNfcHJpdmF0ZSIsImNvbXBhbnlfc2l6ZSIsImluZHVzdHJ5Iiwic3VwcGxpZXJDb250YWN0U2NoZW1hIiwibmFtZSIsImxhc3RuYW1lIiwibW9kZWxQcm92ZWVkb3Jlc1NjaGVtYSIsIm1vZGVsUHJvdmVlZG9yZXNEaXJlY2Npb25TY2hlbWEiLCJtb2RlbFByb3ZlZWRvcmVzQ29uZmlndXJhdGlvblNjaGVtYSIsIm1vZGVsUHJvdmVlZG9yZXNDb250YWN0b3NTY2hlbWEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFHQTtBQUNBQSxxQkFBU0MsT0FBVCxHQUFtQkMsTUFBTSxDQUFDRCxPQUExQjs7QUFFQUQscUJBQVNHLEdBQVQsQ0FBYSxvQkFBYixFQUFtQyxJQUFuQyxFLENBRUE7OztBQUNBSCxxQkFBU0ksT0FBVCxDQUFpQixzSEFBakIsRUFBeUk7QUFBQ0MsRUFBQUEsZUFBZSxFQUFFO0FBQWxCLENBQXpJLEUsQ0FHQTtBQUVBOzs7QUFDQSxJQUFNQyxjQUFjLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUM5QkMsRUFBQUEsVUFBVSxFQUFFQyxNQURrQjtBQUU5QkMsRUFBQUEsWUFBWSxFQUFFRCxNQUZnQjtBQUc5QkUsRUFBQUEsUUFBUSxFQUFFRixNQUhvQjtBQUk5QkcsRUFBQUEsT0FBTyxFQUFFSCxNQUpxQjtBQUs5QkksRUFBQUEsTUFBTSxFQUFFSixNQUxzQjtBQU05QkssRUFBQUEsTUFBTSxFQUFFTCxNQU5zQjtBQU85Qk0sRUFBQUEsR0FBRyxFQUFFTixNQVB5QjtBQVE5Qk8sRUFBQUEsTUFBTSxFQUFFUDtBQVJzQixDQUFYLENBQXZCLEMsQ0FXQTs7QUFDQSxJQUFNUSxxQkFBcUIsR0FBRyxJQUFJVixnQkFBSixDQUFZO0FBQ3RDQyxFQUFBQSxVQUFVLEVBQUVDLE1BRDBCO0FBRXRDUyxFQUFBQSxPQUFPLEVBQUVULE1BRjZCO0FBR3RDVSxFQUFBQSxRQUFRLEVBQUVWLE1BSDRCO0FBSXRDVyxFQUFBQSxFQUFFLEVBQUVYLE1BSmtDO0FBS3RDWSxFQUFBQSxJQUFJLEVBQUVaLE1BTGdDO0FBTXRDYSxFQUFBQSxLQUFLLEVBQUViLE1BTitCO0FBT3RDYyxFQUFBQSxPQUFPLEVBQUVkO0FBUDZCLENBQVosQ0FBOUIsQyxDQVVBOztBQUNBLElBQU1lLDJCQUEyQixHQUFHLElBQUlqQixnQkFBSixDQUFZO0FBQzVDQyxFQUFBQSxVQUFVLEVBQUVDLE1BRGdDO0FBRTVDZ0IsRUFBQUEsUUFBUSxFQUFFaEIsTUFGa0M7QUFHNUNpQixFQUFBQSxRQUFRLEVBQUVqQixNQUhrQztBQUk1Q2tCLEVBQUFBLGFBQWEsRUFBRWxCLE1BSjZCO0FBSzVDbUIsRUFBQUEsS0FBSyxFQUFFbkIsTUFMcUM7QUFNNUNvQixFQUFBQSxhQUFhLEVBQUVwQixNQU42QjtBQU81Q3FCLEVBQUFBLFlBQVksRUFBRXJCLE1BUDhCO0FBUTVDc0IsRUFBQUEsUUFBUSxFQUFFdEI7QUFSa0MsQ0FBWixDQUFwQyxDLENBV0E7O0FBQ0EsSUFBTXVCLHFCQUFxQixHQUFHLElBQUl6QixnQkFBSixDQUFZO0FBQ3RDQyxFQUFBQSxVQUFVLEVBQUVDLE1BRDBCO0FBRXRDQyxFQUFBQSxZQUFZLEVBQUVELE1BRndCO0FBR3RDRSxFQUFBQSxRQUFRLEVBQUVGLE1BSDRCO0FBSXRDd0IsRUFBQUEsSUFBSSxFQUFFeEIsTUFKZ0M7QUFLdEN5QixFQUFBQSxRQUFRLEVBQUV6QixNQUw0QjtBQU10Q0ksRUFBQUEsTUFBTSxFQUFFSixNQU44QjtBQU90Q0ssRUFBQUEsTUFBTSxFQUFFTCxNQVA4QjtBQVF0Q1MsRUFBQUEsT0FBTyxFQUFFVCxNQVI2QjtBQVN0Q2EsRUFBQUEsS0FBSyxFQUFFYixNQVQrQjtBQVV0Q2MsRUFBQUEsT0FBTyxFQUFFZDtBQVY2QixDQUFaLENBQTlCLEMsQ0FjQTtBQUVBOztBQUNBLElBQU0wQixzQkFBc0IsR0FBRyxxQkFBTSxVQUFOLEVBQWtCN0IsY0FBbEIsQ0FBL0IsQyxDQUNBOzs7QUFDQSxJQUFNOEIsK0JBQStCLEdBQUcscUJBQU0sa0JBQU4sRUFBMEJuQixxQkFBMUIsQ0FBeEMsQyxDQUNBOzs7QUFDQSxJQUFNb0IsbUNBQW1DLEdBQUcscUJBQU0sd0JBQU4sRUFBZ0NiLDJCQUFoQyxDQUE1QyxDLENBQ0E7O0FBQ0EsSUFBTWMsK0JBQStCLEdBQUcscUJBQU0sa0JBQU4sRUFBMEJOLHFCQUExQixDQUF4QyIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmRyZXMvTkMvQ09VUlNFUy9jb3Vyc2UtZ3JhcGhxbC9leGVyY2lzZXMvYXBpLW5ld3NvZnQtY29tcHV0ZXIvc3JjL3NjaGVtYS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IHtTY2hlbWEsIG1vZGVsfSBmcm9tICdtb25nb29zZSc7XG5cbi8vIENyZWFyIGxhIGNvbmV4aW9uXG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG5cbm1vbmdvb3NlLnNldCgndXNlVW5pZmllZFRvcG9sb2d5JywgdHJ1ZSk7XG5cbi8vIENvbmV4aW9uXG5tb25nb29zZS5jb25uZWN0KCdtb25nb2RiK3NydjovL2FuZHJlc2dhbmM6bW1kYWExMjM0NUBuYy1tb25nb2RiLWNsdXN0ZXJuYy1mZ2d3YS5nY3AubW9uZ29kYi5uZXQvbmMtc3lzdGVtP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eScsIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcblxuXG4vLyBTQ0hFTUEgUFJPVkVFRE9SRVMgKFNVUFBMSUVSKVxuXG4vLyBzdXBwbGllclNjaGVtYVxuY29uc3Qgc3VwcGxpZXJTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICBjcmVhdGVkX2F0OiBTdHJpbmcsXG4gICAgZG9jdW1lbnR0eXBlOiBTdHJpbmcsXG4gICAgZG9jdW1lbnQ6IFN0cmluZyxcbiAgICBjb21wYW55OiBTdHJpbmcsXG4gICAgcGhvbmVzOiBTdHJpbmcsXG4gICAgZW1haWxzOiBTdHJpbmcsXG4gICAgd2ViOiBTdHJpbmcsXG4gICAgc3RhdHVzOiBTdHJpbmdcbn0pXG5cbi8vIHN1cHBsaWVyQWRkcmVzc1NjaGVtYVxuY29uc3Qgc3VwcGxpZXJBZGRyZXNzU2NoZW1hID0gbmV3IFNjaGVtYSAoe1xuICAgIGNyZWF0ZWRfYXQ6IFN0cmluZyxcbiAgICBhZGRyZXNzOiBTdHJpbmcsXG4gICAgYmxvcV9wdGE6IFN0cmluZyxcbiAgICBjcDogU3RyaW5nLFxuICAgIGNpdHk6IFN0cmluZyxcbiAgICBzdGF0ZTogU3RyaW5nLFxuICAgIGNvdW50cnk6IFN0cmluZ1xufSlcblxuLy8gY3VzdG9tZXJDb25maWd1cmF0aW9uU2NoZW1hXG5jb25zdCBzdXBwbGllckNvbmZpZ3VyYXRpb25TY2hlbWEgPSBuZXcgU2NoZW1hICh7XG4gICAgY3JlYXRlZF9hdDogU3RyaW5nLFxuICAgIGN1cnJlbmN5OiBTdHJpbmcsXG4gICAgbGFuZ3VhZ2U6IFN0cmluZyxcbiAgICBwYXltZW50X3Rlcm1zOiBTdHJpbmcsXG4gICAgbm90ZXM6IFN0cmluZyxcbiAgICBub3Rlc19wcml2YXRlOiBTdHJpbmcsXG4gICAgY29tcGFueV9zaXplOiBTdHJpbmcsXG4gICAgaW5kdXN0cnk6IFN0cmluZ1xufSlcblxuLy8gY3VzdG9tZXJDb250YWN0U2NoZW1hXG5jb25zdCBzdXBwbGllckNvbnRhY3RTY2hlbWEgPSBuZXcgU2NoZW1hICh7XG4gICAgY3JlYXRlZF9hdDogU3RyaW5nLFxuICAgIGRvY3VtZW50dHlwZTogU3RyaW5nLFxuICAgIGRvY3VtZW50OiBTdHJpbmcsXG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGxhc3RuYW1lOiBTdHJpbmcsXG4gICAgcGhvbmVzOiBTdHJpbmcsXG4gICAgZW1haWxzOiBTdHJpbmcsXG4gICAgYWRkcmVzczogU3RyaW5nLFxuICAgIHN0YXRlOiBTdHJpbmcsXG4gICAgY291bnRyeTogU3RyaW5nXG59KVxuXG5cbi8vIE1PREVMT1MgKE5vbWJyZSBkZSBUYWJsYXMpXG5cbi8vIE1vZGVsIGN1c3RvbWVyc1xuY29uc3QgbW9kZWxQcm92ZWVkb3Jlc1NjaGVtYSA9IG1vZGVsKCdzdXBwbGllcicsIHN1cHBsaWVyU2NoZW1hKTtcbi8vIE1vZGVsIGN1c3RvbWVyc19hZGRyZXNzXG5jb25zdCBtb2RlbFByb3ZlZWRvcmVzRGlyZWNjaW9uU2NoZW1hID0gbW9kZWwoJ3N1cHBsaWVyX2FkZHJlc3MnLCBzdXBwbGllckFkZHJlc3NTY2hlbWEpO1xuLy8gTW9kZWwgY3VzdG9tZXJzX0NvbmZpZ3VyYXRpb25cbmNvbnN0IG1vZGVsUHJvdmVlZG9yZXNDb25maWd1cmF0aW9uU2NoZW1hID0gbW9kZWwoJ3N1cHBsaWVyX2NvbmZpZ3VyYXRpb24nLCBzdXBwbGllckNvbmZpZ3VyYXRpb25TY2hlbWEpO1xuLy8gTW9kZWwgY3VzdG9tZXJzX2NvbnRhY3RcbmNvbnN0IG1vZGVsUHJvdmVlZG9yZXNDb250YWN0b3NTY2hlbWEgPSBtb2RlbCgnc3VwcGxpZXJfY29udGFjdCcsIHN1cHBsaWVyQ29udGFjdFNjaGVtYSk7XG5cbmV4cG9ydCB7bW9kZWxQcm92ZWVkb3Jlc1NjaGVtYSwgbW9kZWxQcm92ZWVkb3Jlc0RpcmVjY2lvblNjaGVtYX07Il19",
    "map": {
      "version": 3,
      "sources": [
        "schemaProveedores.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "set",
        "connect",
        "useNewUrlParser",
        "supplierSchema",
        "Schema",
        "created_at",
        "String",
        "documenttype",
        "document",
        "company",
        "phones",
        "emails",
        "web",
        "status",
        "supplierAddressSchema",
        "address",
        "bloq_pta",
        "cp",
        "city",
        "state",
        "country",
        "supplierConfigurationSchema",
        "currency",
        "language",
        "payment_terms",
        "notes",
        "notes_private",
        "company_size",
        "industry",
        "supplierContactSchema",
        "name",
        "lastname",
        "modelProveedoresSchema",
        "modelProveedoresDireccionSchema",
        "modelProveedoresConfigurationSchema",
        "modelProveedoresContactosSchema"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;;;AAGA;AACAA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AAEAD,qBAASG,GAAT,CAAa,oBAAb,EAAmC,IAAnC,E,CAEA;;;AACAH,qBAASI,OAAT,CAAiB,sHAAjB,EAAyI;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAzI,E,CAGA;AAEA;;;AACA,IAAMC,cAAc,GAAG,IAAIC,gBAAJ,CAAW;AAC9BC,EAAAA,UAAU,EAAEC,MADkB;AAE9BC,EAAAA,YAAY,EAAED,MAFgB;AAG9BE,EAAAA,QAAQ,EAAEF,MAHoB;AAI9BG,EAAAA,OAAO,EAAEH,MAJqB;AAK9BI,EAAAA,MAAM,EAAEJ,MALsB;AAM9BK,EAAAA,MAAM,EAAEL,MANsB;AAO9BM,EAAAA,GAAG,EAAEN,MAPyB;AAQ9BO,EAAAA,MAAM,EAAEP;AARsB,CAAX,CAAvB,C,CAWA;;AACA,IAAMQ,qBAAqB,GAAG,IAAIV,gBAAJ,CAAY;AACtCC,EAAAA,UAAU,EAAEC,MAD0B;AAEtCS,EAAAA,OAAO,EAAET,MAF6B;AAGtCU,EAAAA,QAAQ,EAAEV,MAH4B;AAItCW,EAAAA,EAAE,EAAEX,MAJkC;AAKtCY,EAAAA,IAAI,EAAEZ,MALgC;AAMtCa,EAAAA,KAAK,EAAEb,MAN+B;AAOtCc,EAAAA,OAAO,EAAEd;AAP6B,CAAZ,CAA9B,C,CAUA;;AACA,IAAMe,2BAA2B,GAAG,IAAIjB,gBAAJ,CAAY;AAC5CC,EAAAA,UAAU,EAAEC,MADgC;AAE5CgB,EAAAA,QAAQ,EAAEhB,MAFkC;AAG5CiB,EAAAA,QAAQ,EAAEjB,MAHkC;AAI5CkB,EAAAA,aAAa,EAAElB,MAJ6B;AAK5CmB,EAAAA,KAAK,EAAEnB,MALqC;AAM5CoB,EAAAA,aAAa,EAAEpB,MAN6B;AAO5CqB,EAAAA,YAAY,EAAErB,MAP8B;AAQ5CsB,EAAAA,QAAQ,EAAEtB;AARkC,CAAZ,CAApC,C,CAWA;;AACA,IAAMuB,qBAAqB,GAAG,IAAIzB,gBAAJ,CAAY;AACtCC,EAAAA,UAAU,EAAEC,MAD0B;AAEtCC,EAAAA,YAAY,EAAED,MAFwB;AAGtCE,EAAAA,QAAQ,EAAEF,MAH4B;AAItCwB,EAAAA,IAAI,EAAExB,MAJgC;AAKtCyB,EAAAA,QAAQ,EAAEzB,MAL4B;AAMtCI,EAAAA,MAAM,EAAEJ,MAN8B;AAOtCK,EAAAA,MAAM,EAAEL,MAP8B;AAQtCS,EAAAA,OAAO,EAAET,MAR6B;AAStCa,EAAAA,KAAK,EAAEb,MAT+B;AAUtCc,EAAAA,OAAO,EAAEd;AAV6B,CAAZ,CAA9B,C,CAcA;AAEA;;AACA,IAAM0B,sBAAsB,GAAG,qBAAM,UAAN,EAAkB7B,cAAlB,CAA/B,C,CACA;;;AACA,IAAM8B,+BAA+B,GAAG,qBAAM,kBAAN,EAA0BnB,qBAA1B,CAAxC,C,CACA;;;AACA,IAAMoB,mCAAmC,GAAG,qBAAM,wBAAN,EAAgCb,2BAAhC,CAA5C,C,CACA;;AACA,IAAMc,+BAA+B,GAAG,qBAAM,kBAAN,EAA0BN,qBAA1B,CAAxC",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport {Schema, model} from 'mongoose';\n\n// Crear la conexion\nmongoose.Promise = global.Promise;\n\nmongoose.set('useUnifiedTopology', true);\n\n// Conexion\nmongoose.connect('mongodb+srv://andresganc:mmdaa12345@nc-mongodb-clusternc-fggwa.gcp.mongodb.net/nc-system?retryWrites=true&w=majority', {useNewUrlParser: true});\n\n\n// SCHEMA PROVEEDORES (SUPPLIER)\n\n// supplierSchema\nconst supplierSchema = new Schema({\n    created_at: String,\n    documenttype: String,\n    document: String,\n    company: String,\n    phones: String,\n    emails: String,\n    web: String,\n    status: String\n})\n\n// supplierAddressSchema\nconst supplierAddressSchema = new Schema ({\n    created_at: String,\n    address: String,\n    bloq_pta: String,\n    cp: String,\n    city: String,\n    state: String,\n    country: String\n})\n\n// customerConfigurationSchema\nconst supplierConfigurationSchema = new Schema ({\n    created_at: String,\n    currency: String,\n    language: String,\n    payment_terms: String,\n    notes: String,\n    notes_private: String,\n    company_size: String,\n    industry: String\n})\n\n// customerContactSchema\nconst supplierContactSchema = new Schema ({\n    created_at: String,\n    documenttype: String,\n    document: String,\n    name: String,\n    lastname: String,\n    phones: String,\n    emails: String,\n    address: String,\n    state: String,\n    country: String\n})\n\n\n// MODELOS (Nombre de Tablas)\n\n// Model customers\nconst modelProveedoresSchema = model('supplier', supplierSchema);\n// Model customers_address\nconst modelProveedoresDireccionSchema = model('supplier_address', supplierAddressSchema);\n// Model customers_Configuration\nconst modelProveedoresConfigurationSchema = model('supplier_configuration', supplierConfigurationSchema);\n// Model customers_contact\nconst modelProveedoresContactosSchema = model('supplier_contact', supplierContactSchema);\n\nexport {modelProveedoresSchema, modelProveedoresDireccionSchema};"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860787000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedoresDireccion.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedoresDireccion.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedoresDireccion.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverProveedoresDireccion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverProveedoresDireccion.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _schemaProveedores = require(\"../schema/schemaProveedores.js\");\n\nvar _assert = require(\"assert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // ==================================================================================================================\n  // modelProveedoresSchema\n  // ==================================================================================================================\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientes)\n    getProveedoresDireccion: function getProveedoresDireccion() {\n      return _schemaProveedores.modelProveedoresDireccionSchema.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n    getProveedoresDireccionLimite: function getProveedoresDireccionLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaProveedores.modelProveedoresDireccionSchema.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getProveedorDireccionID: function getProveedorDireccionID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaProveedores.modelProveedoresDireccionSchema.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearProveedorDireccion: function crearProveedorDireccion(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoProveedorDireccion = new _schemaProveedores.modelProveedoresDireccionSchema({\n        created_at: input.created_at,\n        documenttype: input.documenttype,\n        document: input.document,\n        company: input.company,\n        phones: input.phones,\n        emails: input.emails,\n        web: input.web,\n        status: input.status\n      }); // Propiedad del id\n\n      nuevoProveedorDireccion.id = nuevoProveedorDireccion._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoProveedorDireccion.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoProveedorDireccion); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarProveedorDireccion: function editarProveedorDireccion(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaProveedores.modelProveedoresDireccionSchema.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarProveedorDireccion: function eliminarProveedorDireccion(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Proveedores.remove   // Se puede usar remove tambien\n        _schemaProveedores.modelProveedoresDireccionSchema.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  } // ==================================================================================================================\n\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVyUHJvdmVlZG9yZXNEaXJlY2Npb24uanMiXSwibmFtZXMiOlsicmVzb2x2ZXJzIiwiUXVlcnkiLCJnZXRQcm92ZWVkb3Jlc0RpcmVjY2lvbiIsIm1vZGVsUHJvdmVlZG9yZXNEaXJlY2Npb25TY2hlbWEiLCJmaW5kIiwiZ2V0UHJvdmVlZG9yZXNEaXJlY2Npb25MaW1pdGUiLCJyb290IiwibGltaXRlIiwibGltaXQiLCJnZXRQcm92ZWVkb3JEaXJlY2Npb25JRCIsImlkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJvYmplY3QiLCJmaW5kQnlJZCIsImVycm9yIiwidXNlciIsIk11dGF0aW9uIiwiY3JlYXJQcm92ZWVkb3JEaXJlY2Npb24iLCJpbnB1dCIsIm51ZXZvUHJvdmVlZG9yRGlyZWNjaW9uIiwiY3JlYXRlZF9hdCIsImRvY3VtZW50dHlwZSIsImRvY3VtZW50IiwiY29tcGFueSIsInBob25lcyIsImVtYWlscyIsIndlYiIsInN0YXR1cyIsIl9pZCIsIk9iamVjdCIsInNhdmUiLCJlZGl0YXJQcm92ZWVkb3JEaXJlY2Npb24iLCJmaW5kT25lQW5kVXBkYXRlIiwiZWxpbWluYXJQcm92ZWVkb3JEaXJlY2Npb24iLCJmaW5kT25lQW5kUmVtb3ZlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFJQTtBQUNPLElBQU1BLFNBQVMsR0FBRztBQUdyQjtBQUNBO0FBQ0E7QUFFQTtBQUNBQyxFQUFBQSxLQUFLLEVBQUU7QUFDSDtBQUNBQyxJQUFBQSx1QkFBdUIsRUFBRSxtQ0FBTTtBQUMzQixhQUFPQyxtREFBZ0NDLElBQWhDLENBQXFDLEVBQXJDLENBQVA7QUFDSCxLQUpFO0FBS0g7QUFDQUMsSUFBQUEsNkJBQTZCLEVBQUUsdUNBQUNDLElBQUQsUUFBb0I7QUFBQSxVQUFaQyxNQUFZLFFBQVpBLE1BQVk7QUFDL0MsYUFBT0osbURBQWdDQyxJQUFoQyxDQUFxQyxFQUFyQyxFQUF5Q0ksS0FBekMsQ0FBK0NELE1BQS9DLENBQVA7QUFDSCxLQVJFO0FBU0g7QUFDQUUsSUFBQUEsdUJBQXVCLEVBQUcsaUNBQUNILElBQUQsU0FBZ0I7QUFBQSxVQUFSSSxFQUFRLFNBQVJBLEVBQVE7QUFDdEMsYUFBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDViwyREFBZ0NXLFFBQWhDLENBQXlDSixFQUF6QyxFQUE2QyxVQUFDSyxLQUFELEVBQVFDLElBQVIsRUFBaUI7QUFDMUQsY0FBR0QsS0FBSCxFQUFVLHFCQUFRQSxLQUFSLEVBQVYsS0FDS0gsT0FBTyxDQUFDSSxJQUFELENBQVA7QUFDUixTQUhEO0FBSUgsT0FMTSxDQUFQO0FBTUg7QUFqQkUsR0FSYztBQTRCckJDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSx1QkFBdUIsRUFBRyxpQ0FBQ1osSUFBRCxTQUFtQjtBQUFBLFVBQVhhLEtBQVcsU0FBWEEsS0FBVztBQUN6QyxVQUFNQyx1QkFBdUIsR0FBRyxJQUFJakIsa0RBQUosQ0FBcUM7QUFDakVrQixRQUFBQSxVQUFVLEVBQUVGLEtBQUssQ0FBQ0UsVUFEK0M7QUFFakVDLFFBQUFBLFlBQVksRUFBRUgsS0FBSyxDQUFDRyxZQUY2QztBQUdqRUMsUUFBQUEsUUFBUSxFQUFFSixLQUFLLENBQUNJLFFBSGlEO0FBSWpFQyxRQUFBQSxPQUFPLEVBQUVMLEtBQUssQ0FBQ0ssT0FKa0Q7QUFLakVDLFFBQUFBLE1BQU0sRUFBRU4sS0FBSyxDQUFDTSxNQUxtRDtBQU1qRUMsUUFBQUEsTUFBTSxFQUFFUCxLQUFLLENBQUNPLE1BTm1EO0FBT2pFQyxRQUFBQSxHQUFHLEVBQUVSLEtBQUssQ0FBQ1EsR0FQc0Q7QUFRakVDLFFBQUFBLE1BQU0sRUFBRVQsS0FBSyxDQUFDUztBQVJtRCxPQUFyQyxDQUFoQyxDQUR5QyxDQVd6Qzs7QUFDQVIsTUFBQUEsdUJBQXVCLENBQUNWLEVBQXhCLEdBQTZCVSx1QkFBdUIsQ0FBQ1MsR0FBckQsQ0FaeUMsQ0FjekM7O0FBQ0EsYUFBTyxJQUFJbEIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVWtCLE1BQVYsRUFBcUI7QUFDcENWLFFBQUFBLHVCQUF1QixDQUFDVyxJQUF4QixDQUE2QixVQUFDaEIsS0FBRCxFQUFXO0FBQU87QUFDM0MsY0FBR0EsS0FBSCxFQUFVLHFCQUFRQSxLQUFSLEVBQVYsQ0FBZ0M7QUFBaEMsZUFDS0gsT0FBTyxDQUFDUSx1QkFBRCxDQUFQLENBRitCLENBRU87QUFDOUMsU0FIRDtBQUlILE9BTE0sQ0FBUDtBQU1ILEtBdEJLO0FBdUJOWSxJQUFBQSx3QkFBd0IsRUFBRSxrQ0FBQzFCLElBQUQsU0FBbUI7QUFBQSxVQUFYYSxLQUFXLFNBQVhBLEtBQVc7QUFDekMsYUFBTyxJQUFJUixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDViwyREFBZ0M4QixnQkFBaEMsQ0FBaUQ7QUFBRUosVUFBQUEsR0FBRyxFQUFFVixLQUFLLENBQUNUO0FBQWIsU0FBakQsRUFBbUVTLEtBQW5FLEVBQTBFO0FBQUMsaUJBQUs7QUFBTixTQUExRSxFQUF1RixVQUFDSixLQUFELEVBQVFDLElBQVIsRUFBaUI7QUFDcEcsY0FBR0QsS0FBSCxFQUFVLHFCQUFRQSxLQUFSLEVBQVYsS0FDS0gsT0FBTyxDQUFDSSxJQUFELENBQVA7QUFDUixTQUhEO0FBSUgsT0FMTSxDQUFQO0FBTUgsS0E5Qks7QUErQk5rQixJQUFBQSwwQkFBMEIsRUFBRSxvQ0FBQzVCLElBQUQsU0FBZ0I7QUFBQSxVQUFSSSxFQUFRLFNBQVJBLEVBQVE7QUFDeEMsYUFBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDO0FBQ0FWLDJEQUFnQ2dDLGdCQUFoQyxDQUFpRDtBQUFDTixVQUFBQSxHQUFHLEVBQUVuQjtBQUFOLFNBQWpELEVBQTRELFVBQUNLLEtBQUQsRUFBVztBQUNuRSxjQUFJQSxLQUFKLEVBQVcscUJBQVFBLEtBQVIsRUFBWCxLQUNLSCxPQUFPLENBQUMsMEJBQUQsQ0FBUDtBQUNSLFNBSEQ7QUFJSCxPQU5NLENBQVA7QUFPSDtBQXZDSyxHQTVCVyxDQXFFckI7O0FBckVxQixDQUFsQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmRyZXMvTkMvQ09VUlNFUy9jb3Vyc2UtZ3JhcGhxbC9leGVyY2lzZXMvYXBpLW5ld3NvZnQtY29tcHV0ZXIvc3JjL3Jlc29sdmVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IHsgbW9kZWxQcm92ZWVkb3Jlc0RpcmVjY2lvblNjaGVtYSB9IGZyb20gJy4uL3NjaGVtYS9zY2hlbWFQcm92ZWVkb3Jlcy5qcyc7XG5pbXBvcnQgeyByZWplY3RzIH0gZnJvbSAnYXNzZXJ0JztcblxuXG5cbi8vIEV4cG9ydCBOdWV2byBjb24gc2NoZW1hLmdyYXBocWwsIEdyYXBoUUwgVG9vbHMgeSBHcmFwaFFMIEltcG9ydFxuZXhwb3J0IGNvbnN0IHJlc29sdmVycyA9IHtcblxuXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gbW9kZWxQcm92ZWVkb3Jlc1NjaGVtYVxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gICAgLy8gUXVlcnkgeSBNdXRhdGlvbiBGdW5jaW9uZXMgZGUgR3JhcGhRTCBUb29scyBwYXJhIGhhY2VyIE1hcGVvXG4gICAgUXVlcnk6IHtcbiAgICAgICAgLy8gUmVzb2x2ZXIgcGFyYSBvYnRlbmVyIHRvZG9zIGxvcyBjbGllbnRlcyAoZ2V0Q2xpZW50ZXMpXG4gICAgICAgIGdldFByb3ZlZWRvcmVzRGlyZWNjaW9uOiAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbW9kZWxQcm92ZWVkb3Jlc0RpcmVjY2lvblNjaGVtYS5maW5kKHt9KVxuICAgICAgICB9LFxuICAgICAgICAvLyBSZXNvbHZlciBwYXJhIG9idGVuZXIgY2xpZW50ZXMgY29uIHVuIGxpbWl0ZSBkZSByZWdpc3Ryb3MgKGdldENsaWVudGVzTGltaXRlKVxuICAgICAgICBnZXRQcm92ZWVkb3Jlc0RpcmVjY2lvbkxpbWl0ZTogKHJvb3QsIHtsaW1pdGV9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbW9kZWxQcm92ZWVkb3Jlc0RpcmVjY2lvblNjaGVtYS5maW5kKHt9KS5saW1pdChsaW1pdGUpXG4gICAgICAgIH0sXG4gICAgICAgIC8vIFJlc29sdmVyIHBhcmEgb2J0ZW5lciB1biBjbGllbnRlIHBvciBzdSBpZCAoZ2V0Q2xpZW50ZSlcbiAgICAgICAgZ2V0UHJvdmVlZG9yRGlyZWNjaW9uSUQgOiAocm9vdCwge2lkfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBtb2RlbFByb3ZlZWRvcmVzRGlyZWNjaW9uU2NoZW1hLmZpbmRCeUlkKGlkLCAoZXJyb3IsIHVzZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3IpIHJlamVjdHMoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZSh1c2VyKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfSxcblxuICAgIE11dGF0aW9uOiB7XG4gICAgICAgIGNyZWFyUHJvdmVlZG9yRGlyZWNjaW9uIDogKHJvb3QsIHtpbnB1dH0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG51ZXZvUHJvdmVlZG9yRGlyZWNjaW9uID0gbmV3IG1vZGVsUHJvdmVlZG9yZXNEaXJlY2Npb25TY2hlbWEgKHtcbiAgICAgICAgICAgICAgICBjcmVhdGVkX2F0OiBpbnB1dC5jcmVhdGVkX2F0LFxuICAgICAgICAgICAgICAgIGRvY3VtZW50dHlwZTogaW5wdXQuZG9jdW1lbnR0eXBlLFxuICAgICAgICAgICAgICAgIGRvY3VtZW50OiBpbnB1dC5kb2N1bWVudCxcbiAgICAgICAgICAgICAgICBjb21wYW55OiBpbnB1dC5jb21wYW55LFxuICAgICAgICAgICAgICAgIHBob25lczogaW5wdXQucGhvbmVzLFxuICAgICAgICAgICAgICAgIGVtYWlsczogaW5wdXQuZW1haWxzLFxuICAgICAgICAgICAgICAgIHdlYjogaW5wdXQud2ViLFxuICAgICAgICAgICAgICAgIHN0YXR1czogaW5wdXQuc3RhdHVzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIFByb3BpZWRhZCBkZWwgaWRcbiAgICAgICAgICAgIG51ZXZvUHJvdmVlZG9yRGlyZWNjaW9uLmlkID0gbnVldm9Qcm92ZWVkb3JEaXJlY2Npb24uX2lkO1xuXG4gICAgICAgICAgICAvLyBDb24gZWwgUHJvbWlzZSBndWFyZGFtb3MgZW4gbGEgYmFzZSBkZSBkYXRvcyBkZSBNb25nb0RCXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIE9iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIG51ZXZvUHJvdmVlZG9yRGlyZWNjaW9uLnNhdmUoKGVycm9yKSA9PiB7ICAgICAgLy8gU2UgaGFjZSB1biBDYWxsQmFjayBwYXJhIHNhYmVyIHNpIHNlIGluc2VydG8gbyBubyBzZSBpbnNlcnRvIGVsIHJlZ2lzdHJvXG4gICAgICAgICAgICAgICAgICAgIGlmKGVycm9yKSByZWplY3RzKGVycm9yKSAgICAgICAgLy8gU2kgaGF5IGVycm9yIGhhY2Vtb3MgdW4gcmVqZWN0cyBsbyBub3MgbXVlc3RyYSBlbiBjb25zb2xhXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZShudWV2b1Byb3ZlZWRvckRpcmVjY2lvbikgICAgICAvLyBEZSBsbyBjb250cmFyaW8gaGFjZW1vcyB1biByZXNvbHZlIHkgR3VhcmRhcmlhXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZWRpdGFyUHJvdmVlZG9yRGlyZWNjaW9uOiAocm9vdCwge2lucHV0fSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBtb2RlbFByb3ZlZWRvcmVzRGlyZWNjaW9uU2NoZW1hLmZpbmRPbmVBbmRVcGRhdGUoeyBfaWQ6IGlucHV0LmlkfSwgaW5wdXQsIHtuZXc6IHRydWV9LCAoZXJyb3IsIHVzZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3IpIHJlamVjdHMoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZSh1c2VyKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVsaW1pbmFyUHJvdmVlZG9yRGlyZWNjaW9uOiAocm9vdCwge2lkfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAvL1Byb3ZlZWRvcmVzLnJlbW92ZSAgIC8vIFNlIHB1ZWRlIHVzYXIgcmVtb3ZlIHRhbWJpZW5cbiAgICAgICAgICAgICAgICBtb2RlbFByb3ZlZWRvcmVzRGlyZWNjaW9uU2NoZW1hLmZpbmRPbmVBbmRSZW1vdmUoe19pZDogaWR9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSByZWplY3RzKGVycm9yKVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHJlc29sdmUoXCJTZSBlbGltaW5vIGNvcnJlY3RhbWVudGVcIilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSxcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolverProveedoresDireccion.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getProveedoresDireccion",
        "modelProveedoresDireccionSchema",
        "find",
        "getProveedoresDireccionLimite",
        "root",
        "limite",
        "limit",
        "getProveedorDireccionID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearProveedorDireccion",
        "input",
        "nuevoProveedorDireccion",
        "created_at",
        "documenttype",
        "document",
        "company",
        "phones",
        "emails",
        "web",
        "status",
        "_id",
        "Object",
        "save",
        "editarProveedorDireccion",
        "findOneAndUpdate",
        "eliminarProveedorDireccion",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAIA;AACO,IAAMA,SAAS,GAAG;AAGrB;AACA;AACA;AAEA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,uBAAuB,EAAE,mCAAM;AAC3B,aAAOC,mDAAgCC,IAAhC,CAAqC,EAArC,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,6BAA6B,EAAE,uCAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AAC/C,aAAOJ,mDAAgCC,IAAhC,CAAqC,EAArC,EAAyCI,KAAzC,CAA+CD,MAA/C,CAAP;AACH,KARE;AASH;AACAE,IAAAA,uBAAuB,EAAG,iCAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACtC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,2DAAgCW,QAAhC,CAAyCJ,EAAzC,EAA6C,UAACK,KAAD,EAAQC,IAAR,EAAiB;AAC1D,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GARc;AA4BrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,uBAAuB,EAAG,iCAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AACzC,UAAMC,uBAAuB,GAAG,IAAIjB,kDAAJ,CAAqC;AACjEkB,QAAAA,UAAU,EAAEF,KAAK,CAACE,UAD+C;AAEjEC,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAF6C;AAGjEC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHiD;AAIjEC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAJkD;AAKjEC,QAAAA,MAAM,EAAEN,KAAK,CAACM,MALmD;AAMjEC,QAAAA,MAAM,EAAEP,KAAK,CAACO,MANmD;AAOjEC,QAAAA,GAAG,EAAER,KAAK,CAACQ,GAPsD;AAQjEC,QAAAA,MAAM,EAAET,KAAK,CAACS;AARmD,OAArC,CAAhC,CADyC,CAWzC;;AACAR,MAAAA,uBAAuB,CAACV,EAAxB,GAA6BU,uBAAuB,CAACS,GAArD,CAZyC,CAczC;;AACA,aAAO,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUkB,MAAV,EAAqB;AACpCV,QAAAA,uBAAuB,CAACW,IAAxB,CAA6B,UAAChB,KAAD,EAAW;AAAO;AAC3C,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,uBAAD,CAAP,CAF+B,CAEO;AAC9C,SAHD;AAIH,OALM,CAAP;AAMH,KAtBK;AAuBNY,IAAAA,wBAAwB,EAAE,kCAAC1B,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AACzC,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,2DAAgC8B,gBAAhC,CAAiD;AAAEJ,UAAAA,GAAG,EAAEV,KAAK,CAACT;AAAb,SAAjD,EAAmES,KAAnE,EAA0E;AAAC,iBAAK;AAAN,SAA1E,EAAuF,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AACpG,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KA9BK;AA+BNkB,IAAAA,0BAA0B,EAAE,oCAAC5B,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACxC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,2DAAgCgC,gBAAhC,CAAiD;AAACN,UAAAA,GAAG,EAAEnB;AAAN,SAAjD,EAA4D,UAACK,KAAD,EAAW;AACnE,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AAvCK,GA5BW,CAqErB;;AArEqB,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport { modelProveedoresDireccionSchema } from '../schema/schemaProveedores.js';\nimport { rejects } from 'assert';\n\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n\n\n    // ==================================================================================================================\n    // modelProveedoresSchema\n    // ==================================================================================================================\n\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientes)\n        getProveedoresDireccion: () => {\n            return modelProveedoresDireccionSchema.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n        getProveedoresDireccionLimite: (root, {limite}) => {\n            return modelProveedoresDireccionSchema.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getProveedorDireccionID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelProveedoresDireccionSchema.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearProveedorDireccion : (root, {input}) => {\n            const nuevoProveedorDireccion = new modelProveedoresDireccionSchema ({\n                created_at: input.created_at,\n                documenttype: input.documenttype,\n                document: input.document,\n                company: input.company,\n                phones: input.phones,\n                emails: input.emails,\n                web: input.web,\n                status: input.status\n            });\n            // Propiedad del id\n            nuevoProveedorDireccion.id = nuevoProveedorDireccion._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoProveedorDireccion.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoProveedorDireccion)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarProveedorDireccion: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelProveedoresDireccionSchema.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarProveedorDireccion: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Proveedores.remove   // Se puede usar remove tambien\n                modelProveedoresDireccionSchema.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    },\n    // ==================================================================================================================\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860792000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverUsers.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverUsers.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverUsers.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/resolverUsers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
        "sourceFileName": "resolverUsers.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _schemaUsers = require(\"../schema/schemaUsers.js\");\n\nvar _assert = require(\"assert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nvar resolvers = {\n  // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n  Query: {\n    // Resolver para obtener todos los clientes (getClientes)\n    getUsers: function getUsers() {\n      return _schemaUsers.modelUsers.find({});\n    },\n    // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n    getUsersLimite: function getUsersLimite(root, _ref) {\n      var limite = _ref.limite;\n      return _schemaUsers.modelUsers.find({}).limit(limite);\n    },\n    // Resolver para obtener un cliente por su id (getCliente)\n    getUserID: function getUserID(root, _ref2) {\n      var id = _ref2.id;\n      return new Promise(function (resolve, object) {\n        _schemaUsers.modelUsers.findById(id, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    }\n  },\n  Mutation: {\n    crearUser: function crearUser(root, _ref3) {\n      var input = _ref3.input;\n      var nuevoUser = new _schemaUsers.modelUsers({\n        created_at: input.created_at,\n        name: input.name,\n        lastname: input.lastname,\n        email: input.email,\n        password: input.password,\n        image: input.image,\n        status: input.status\n      }); // Propiedad del id\n\n      nuevoUser.id = nuevoUser._id; // Con el Promise guardamos en la base de datos de MongoDB\n\n      return new Promise(function (resolve, Object) {\n        nuevoUser.save(function (error) {\n          // Se hace un CallBack para saber si se inserto o no se inserto el registro\n          if (error) (0, _assert.rejects)(error); // Si hay error hacemos un rejects lo nos muestra en consola\n          else resolve(nuevoUser); // De lo contrario hacemos un resolve y Guardaria\n        });\n      });\n    },\n    editarUser: function editarUser(root, _ref4) {\n      var input = _ref4.input;\n      return new Promise(function (resolve, object) {\n        _schemaUsers.modelUsers.findOneAndUpdate({\n          _id: input.id\n        }, input, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) (0, _assert.rejects)(error);else resolve(user);\n        });\n      });\n    },\n    eliminarUser: function eliminarUser(root, _ref5) {\n      var id = _ref5.id;\n      return new Promise(function (resolve, object) {\n        //Clientes.remove   // Se puede usar remove tambien\n        _schemaUsers.modelUsers.findOneAndRemove({\n          _id: id\n        }, function (error) {\n          if (error) (0, _assert.rejects)(error);else resolve(\"Se elimino correctamente\");\n        });\n      });\n    }\n  }\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVyVXNlcnMuanMiXSwibmFtZXMiOlsicmVzb2x2ZXJzIiwiUXVlcnkiLCJnZXRVc2VycyIsIm1vZGVsVXNlcnMiLCJmaW5kIiwiZ2V0VXNlcnNMaW1pdGUiLCJyb290IiwibGltaXRlIiwibGltaXQiLCJnZXRVc2VySUQiLCJpZCIsIlByb21pc2UiLCJyZXNvbHZlIiwib2JqZWN0IiwiZmluZEJ5SWQiLCJlcnJvciIsInVzZXIiLCJNdXRhdGlvbiIsImNyZWFyVXNlciIsImlucHV0IiwibnVldm9Vc2VyIiwiY3JlYXRlZF9hdCIsIm5hbWUiLCJsYXN0bmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJpbWFnZSIsInN0YXR1cyIsIl9pZCIsIk9iamVjdCIsInNhdmUiLCJlZGl0YXJVc2VyIiwiZmluZE9uZUFuZFVwZGF0ZSIsImVsaW1pbmFyVXNlciIsImZpbmRPbmVBbmRSZW1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBO0FBQ08sSUFBTUEsU0FBUyxHQUFHO0FBQ3JCO0FBQ0FDLEVBQUFBLEtBQUssRUFBRTtBQUNIO0FBQ0FDLElBQUFBLFFBQVEsRUFBRSxvQkFBTTtBQUNaLGFBQU9DLHdCQUFXQyxJQUFYLENBQWdCLEVBQWhCLENBQVA7QUFDSCxLQUpFO0FBS0g7QUFDQUMsSUFBQUEsY0FBYyxFQUFFLHdCQUFDQyxJQUFELFFBQW9CO0FBQUEsVUFBWkMsTUFBWSxRQUFaQSxNQUFZO0FBQ2hDLGFBQU9KLHdCQUFXQyxJQUFYLENBQWdCLEVBQWhCLEVBQW9CSSxLQUFwQixDQUEwQkQsTUFBMUIsQ0FBUDtBQUNILEtBUkU7QUFTSDtBQUNBRSxJQUFBQSxTQUFTLEVBQUcsbUJBQUNILElBQUQsU0FBZ0I7QUFBQSxVQUFSSSxFQUFRLFNBQVJBLEVBQVE7QUFDeEIsYUFBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDVixnQ0FBV1csUUFBWCxDQUFvQkosRUFBcEIsRUFBd0IsVUFBQ0ssS0FBRCxFQUFRQyxJQUFSLEVBQWlCO0FBQ3JDLGNBQUdELEtBQUgsRUFBVSxxQkFBUUEsS0FBUixFQUFWLEtBQ0tILE9BQU8sQ0FBQ0ksSUFBRCxDQUFQO0FBQ1IsU0FIRDtBQUlILE9BTE0sQ0FBUDtBQU1IO0FBakJFLEdBRmM7QUFzQnJCQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkMsSUFBQUEsU0FBUyxFQUFHLG1CQUFDWixJQUFELFNBQW1CO0FBQUEsVUFBWGEsS0FBVyxTQUFYQSxLQUFXO0FBQzNCLFVBQU1DLFNBQVMsR0FBRyxJQUFJakIsdUJBQUosQ0FBZ0I7QUFDOUJrQixRQUFBQSxVQUFVLEVBQUVGLEtBQUssQ0FBQ0UsVUFEWTtBQUU5QkMsUUFBQUEsSUFBSSxFQUFFSCxLQUFLLENBQUNHLElBRmtCO0FBRzlCQyxRQUFBQSxRQUFRLEVBQUVKLEtBQUssQ0FBQ0ksUUFIYztBQUk5QkMsUUFBQUEsS0FBSyxFQUFFTCxLQUFLLENBQUNLLEtBSmlCO0FBSzlCQyxRQUFBQSxRQUFRLEVBQUVOLEtBQUssQ0FBQ00sUUFMYztBQU05QkMsUUFBQUEsS0FBSyxFQUFFUCxLQUFLLENBQUNPLEtBTmlCO0FBTzlCQyxRQUFBQSxNQUFNLEVBQUVSLEtBQUssQ0FBQ1E7QUFQZ0IsT0FBaEIsQ0FBbEIsQ0FEMkIsQ0FVM0I7O0FBQ0FQLE1BQUFBLFNBQVMsQ0FBQ1YsRUFBVixHQUFlVSxTQUFTLENBQUNRLEdBQXpCLENBWDJCLENBYTNCOztBQUNBLGFBQU8sSUFBSWpCLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVpQixNQUFWLEVBQXFCO0FBQ3BDVCxRQUFBQSxTQUFTLENBQUNVLElBQVYsQ0FBZSxVQUFDZixLQUFELEVBQVc7QUFBTztBQUM3QixjQUFHQSxLQUFILEVBQVUscUJBQVFBLEtBQVIsRUFBVixDQUFnQztBQUFoQyxlQUNLSCxPQUFPLENBQUNRLFNBQUQsQ0FBUCxDQUZpQixDQUVPO0FBQ2hDLFNBSEQ7QUFJSCxPQUxNLENBQVA7QUFNSCxLQXJCSztBQXNCTlcsSUFBQUEsVUFBVSxFQUFFLG9CQUFDekIsSUFBRCxTQUFtQjtBQUFBLFVBQVhhLEtBQVcsU0FBWEEsS0FBVztBQUMzQixhQUFPLElBQUlSLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcENWLGdDQUFXNkIsZ0JBQVgsQ0FBNEI7QUFBRUosVUFBQUEsR0FBRyxFQUFFVCxLQUFLLENBQUNUO0FBQWIsU0FBNUIsRUFBOENTLEtBQTlDLEVBQXFEO0FBQUMsaUJBQUs7QUFBTixTQUFyRCxFQUFrRSxVQUFDSixLQUFELEVBQVFDLElBQVIsRUFBaUI7QUFDL0UsY0FBR0QsS0FBSCxFQUFVLHFCQUFRQSxLQUFSLEVBQVYsS0FDS0gsT0FBTyxDQUFDSSxJQUFELENBQVA7QUFDUixTQUhEO0FBSUgsT0FMTSxDQUFQO0FBTUgsS0E3Qks7QUE4Qk5pQixJQUFBQSxZQUFZLEVBQUUsc0JBQUMzQixJQUFELFNBQWdCO0FBQUEsVUFBUkksRUFBUSxTQUFSQSxFQUFRO0FBQzFCLGFBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQztBQUNBVixnQ0FBVytCLGdCQUFYLENBQTRCO0FBQUNOLFVBQUFBLEdBQUcsRUFBRWxCO0FBQU4sU0FBNUIsRUFBdUMsVUFBQ0ssS0FBRCxFQUFXO0FBQzlDLGNBQUlBLEtBQUosRUFBVyxxQkFBUUEsS0FBUixFQUFYLEtBQ0tILE9BQU8sQ0FBQywwQkFBRCxDQUFQO0FBQ1IsU0FIRDtBQUlILE9BTk0sQ0FBUDtBQU9IO0FBdENLO0FBdEJXLENBQWxCIiwic291cmNlUm9vdCI6Ii9ob21lL2FuZHJlcy9OQy9DT1VSU0VTL2NvdXJzZS1ncmFwaHFsL2V4ZXJjaXNlcy9hcGktbmV3c29mdC1jb21wdXRlci9zcmMvcmVzb2x2ZXJzLyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB7bW9kZWxVc2Vyc30gZnJvbSAnLi4vc2NoZW1hL3NjaGVtYVVzZXJzLmpzJztcbmltcG9ydCB7IHJlamVjdHMgfSBmcm9tICdhc3NlcnQnO1xuXG5cbi8vIEV4cG9ydCBOdWV2byBjb24gc2NoZW1hLmdyYXBocWwsIEdyYXBoUUwgVG9vbHMgeSBHcmFwaFFMIEltcG9ydFxuZXhwb3J0IGNvbnN0IHJlc29sdmVycyA9IHtcbiAgICAvLyBRdWVyeSB5IE11dGF0aW9uIEZ1bmNpb25lcyBkZSBHcmFwaFFMIFRvb2xzIHBhcmEgaGFjZXIgTWFwZW9cbiAgICBRdWVyeToge1xuICAgICAgICAvLyBSZXNvbHZlciBwYXJhIG9idGVuZXIgdG9kb3MgbG9zIGNsaWVudGVzIChnZXRDbGllbnRlcylcbiAgICAgICAgZ2V0VXNlcnM6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBtb2RlbFVzZXJzLmZpbmQoe30pXG4gICAgICAgIH0sXG4gICAgICAgIC8vIFJlc29sdmVyIHBhcmEgb2J0ZW5lciBjbGllbnRlcyBjb24gdW4gbGltaXRlIGRlIHJlZ2lzdHJvcyAoZ2V0Q2xpZW50ZXNMaW1pdGUpXG4gICAgICAgIGdldFVzZXJzTGltaXRlOiAocm9vdCwge2xpbWl0ZX0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBtb2RlbFVzZXJzLmZpbmQoe30pLmxpbWl0KGxpbWl0ZSlcbiAgICAgICAgfSxcbiAgICAgICAgLy8gUmVzb2x2ZXIgcGFyYSBvYnRlbmVyIHVuIGNsaWVudGUgcG9yIHN1IGlkIChnZXRDbGllbnRlKVxuICAgICAgICBnZXRVc2VySUQgOiAocm9vdCwge2lkfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBtb2RlbFVzZXJzLmZpbmRCeUlkKGlkLCAoZXJyb3IsIHVzZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3IpIHJlamVjdHMoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZSh1c2VyKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfSxcblxuICAgIE11dGF0aW9uOiB7XG4gICAgICAgIGNyZWFyVXNlciA6IChyb290LCB7aW5wdXR9KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBudWV2b1VzZXIgPSBuZXcgbW9kZWxVc2VycyAoe1xuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IGlucHV0LmNyZWF0ZWRfYXQsXG4gICAgICAgICAgICAgICAgbmFtZTogaW5wdXQubmFtZSxcbiAgICAgICAgICAgICAgICBsYXN0bmFtZTogaW5wdXQubGFzdG5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWw6IGlucHV0LmVtYWlsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBpbnB1dC5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICBpbWFnZTogaW5wdXQuaW1hZ2UsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBpbnB1dC5zdGF0dXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gUHJvcGllZGFkIGRlbCBpZFxuICAgICAgICAgICAgbnVldm9Vc2VyLmlkID0gbnVldm9Vc2VyLl9pZDtcblxuICAgICAgICAgICAgLy8gQ29uIGVsIFByb21pc2UgZ3VhcmRhbW9zIGVuIGxhIGJhc2UgZGUgZGF0b3MgZGUgTW9uZ29EQlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCBPYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBudWV2b1VzZXIuc2F2ZSgoZXJyb3IpID0+IHsgICAgICAvLyBTZSBoYWNlIHVuIENhbGxCYWNrIHBhcmEgc2FiZXIgc2kgc2UgaW5zZXJ0byBvIG5vIHNlIGluc2VydG8gZWwgcmVnaXN0cm9cbiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3IpIHJlamVjdHMoZXJyb3IpICAgICAgICAvLyBTaSBoYXkgZXJyb3IgaGFjZW1vcyB1biByZWplY3RzIGxvIG5vcyBtdWVzdHJhIGVuIGNvbnNvbGFcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXNvbHZlKG51ZXZvVXNlcikgICAgICAvLyBEZSBsbyBjb250cmFyaW8gaGFjZW1vcyB1biByZXNvbHZlIHkgR3VhcmRhcmlhXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZWRpdGFyVXNlcjogKHJvb3QsIHtpbnB1dH0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgb2JqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgbW9kZWxVc2Vycy5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiBpbnB1dC5pZH0sIGlucHV0LCB7bmV3OiB0cnVlfSwgKGVycm9yLCB1c2VyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmKGVycm9yKSByZWplY3RzKGVycm9yKVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHJlc29sdmUodXNlcilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBlbGltaW5hclVzZXI6IChyb290LCB7aWR9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIG9iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vQ2xpZW50ZXMucmVtb3ZlICAgLy8gU2UgcHVlZGUgdXNhciByZW1vdmUgdGFtYmllblxuICAgICAgICAgICAgICAgIG1vZGVsVXNlcnMuZmluZE9uZUFuZFJlbW92ZSh7X2lkOiBpZH0sIChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHJlamVjdHMoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzb2x2ZShcIlNlIGVsaW1pbm8gY29ycmVjdGFtZW50ZVwiKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "resolverUsers.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "getUsers",
        "modelUsers",
        "find",
        "getUsersLimite",
        "root",
        "limite",
        "limit",
        "getUserID",
        "id",
        "Promise",
        "resolve",
        "object",
        "findById",
        "error",
        "user",
        "Mutation",
        "crearUser",
        "input",
        "nuevoUser",
        "created_at",
        "name",
        "lastname",
        "email",
        "password",
        "image",
        "status",
        "_id",
        "Object",
        "save",
        "editarUser",
        "findOneAndUpdate",
        "eliminarUser",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;;;AAGA;AACO,IAAMA,SAAS,GAAG;AACrB;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,QAAQ,EAAE,oBAAM;AACZ,aAAOC,wBAAWC,IAAX,CAAgB,EAAhB,CAAP;AACH,KAJE;AAKH;AACAC,IAAAA,cAAc,EAAE,wBAACC,IAAD,QAAoB;AAAA,UAAZC,MAAY,QAAZA,MAAY;AAChC,aAAOJ,wBAAWC,IAAX,CAAgB,EAAhB,EAAoBI,KAApB,CAA0BD,MAA1B,CAAP;AACH,KARE;AASH;AACAE,IAAAA,SAAS,EAAG,mBAACH,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AACxB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,gCAAWW,QAAX,CAAoBJ,EAApB,EAAwB,UAACK,KAAD,EAAQC,IAAR,EAAiB;AACrC,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH;AAjBE,GAFc;AAsBrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAG,mBAACZ,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAC3B,UAAMC,SAAS,GAAG,IAAIjB,uBAAJ,CAAgB;AAC9BkB,QAAAA,UAAU,EAAEF,KAAK,CAACE,UADY;AAE9BC,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAFkB;AAG9BC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHc;AAI9BC,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAJiB;AAK9BC,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QALc;AAM9BC,QAAAA,KAAK,EAAEP,KAAK,CAACO,KANiB;AAO9BC,QAAAA,MAAM,EAAER,KAAK,CAACQ;AAPgB,OAAhB,CAAlB,CAD2B,CAU3B;;AACAP,MAAAA,SAAS,CAACV,EAAV,GAAeU,SAAS,CAACQ,GAAzB,CAX2B,CAa3B;;AACA,aAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUiB,MAAV,EAAqB;AACpCT,QAAAA,SAAS,CAACU,IAAV,CAAe,UAACf,KAAD,EAAW;AAAO;AAC7B,cAAGA,KAAH,EAAU,qBAAQA,KAAR,EAAV,CAAgC;AAAhC,eACKH,OAAO,CAACQ,SAAD,CAAP,CAFiB,CAEO;AAChC,SAHD;AAIH,OALM,CAAP;AAMH,KArBK;AAsBNW,IAAAA,UAAU,EAAE,oBAACzB,IAAD,SAAmB;AAAA,UAAXa,KAAW,SAAXA,KAAW;AAC3B,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,gCAAW6B,gBAAX,CAA4B;AAAEJ,UAAAA,GAAG,EAAET,KAAK,CAACT;AAAb,SAA5B,EAA8CS,KAA9C,EAAqD;AAAC,iBAAK;AAAN,SAArD,EAAkE,UAACJ,KAAD,EAAQC,IAAR,EAAiB;AAC/E,cAAGD,KAAH,EAAU,qBAAQA,KAAR,EAAV,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,SAHD;AAIH,OALM,CAAP;AAMH,KA7BK;AA8BNiB,IAAAA,YAAY,EAAE,sBAAC3B,IAAD,SAAgB;AAAA,UAARI,EAAQ,SAARA,EAAQ;AAC1B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAV,gCAAW+B,gBAAX,CAA4B;AAACN,UAAAA,GAAG,EAAElB;AAAN,SAA5B,EAAuC,UAACK,KAAD,EAAW;AAC9C,cAAIA,KAAJ,EAAW,qBAAQA,KAAR,EAAX,KACKH,OAAO,CAAC,0BAAD,CAAP;AACR,SAHD;AAIH,OANM,CAAP;AAOH;AAtCK;AAtBW,CAAlB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/resolvers/",
      "sourcesContent": [
        "\nimport mongoose from 'mongoose';\nimport {modelUsers} from '../schema/schemaUsers.js';\nimport { rejects } from 'assert';\n\n\n// Export Nuevo con schema.graphql, GraphQL Tools y GraphQL Import\nexport const resolvers = {\n    // Query y Mutation Funciones de GraphQL Tools para hacer Mapeo\n    Query: {\n        // Resolver para obtener todos los clientes (getClientes)\n        getUsers: () => {\n            return modelUsers.find({})\n        },\n        // Resolver para obtener clientes con un limite de registros (getClientesLimite)\n        getUsersLimite: (root, {limite}) => {\n            return modelUsers.find({}).limit(limite)\n        },\n        // Resolver para obtener un cliente por su id (getCliente)\n        getUserID : (root, {id}) => {\n            return new Promise((resolve, object) => {\n                modelUsers.findById(id, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n    },\n\n    Mutation: {\n        crearUser : (root, {input}) => {\n            const nuevoUser = new modelUsers ({\n                created_at: input.created_at,\n                name: input.name,\n                lastname: input.lastname,\n                email: input.email,\n                password: input.password,\n                image: input.image,\n                status: input.status\n            });\n            // Propiedad del id\n            nuevoUser.id = nuevoUser._id;\n\n            // Con el Promise guardamos en la base de datos de MongoDB\n            return new Promise((resolve, Object) => {\n                nuevoUser.save((error) => {      // Se hace un CallBack para saber si se inserto o no se inserto el registro\n                    if(error) rejects(error)        // Si hay error hacemos un rejects lo nos muestra en consola\n                    else resolve(nuevoUser)      // De lo contrario hacemos un resolve y Guardaria\n                });\n            });\n        },\n        editarUser: (root, {input}) => {\n            return new Promise((resolve, object) => {\n                modelUsers.findOneAndUpdate({ _id: input.id}, input, {new: true}, (error, user) => {\n                    if(error) rejects(error)\n                    else resolve(user)\n                });\n            });\n        },\n        eliminarUser: (root, {id}) => {\n            return new Promise((resolve, object) => {\n                //Clientes.remove   // Se puede usar remove tambien\n                modelUsers.findOneAndRemove({_id: id}, (error) => {\n                    if (error) rejects(error)\n                    else resolve(\"Se elimino correctamente\")\n                });\n            });\n        }\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860754000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaUsers.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaUsers.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaUsers.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/schemaUsers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
        "sourceFileName": "schemaUsers.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modelUsers = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//import mon{ Schema } from 'mongoose';\nvar mongoose = require('../db/db-newsoft-computer.js'); // SCHEMA USER\n\n\nvar userSchema = mongoose.Schema({\n  created_at: String,\n  name: String,\n  lastname: String,\n  email: String,\n  password: String,\n  image: String,\n  status: Boolean\n});\n/*\nconst userSchema = new mongoose.Schema ({\n    created_at: String,\n    name: String,\n    lastname: String,\n    email: String,\n    password: String,\n    image: String,\n    status: Boolean\n})\n*/\n//const myDB = mongoose.connection.useDb('newsoft-computer');\n// Creacion del Modelo (Seria como la DB o Tabla)\n// ('Nombre de la tabla', NombreDelSchema)\n\nvar modelUsers = mongoose.model('users', userSchema);\nexports.modelUsers = modelUsers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYVVzZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsInVzZXJTY2hlbWEiLCJTY2hlbWEiLCJjcmVhdGVkX2F0IiwiU3RyaW5nIiwibmFtZSIsImxhc3RuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsImltYWdlIiwic3RhdHVzIiwiQm9vbGVhbiIsIm1vZGVsVXNlcnMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOzs7O0FBQ0E7QUFFQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyw4QkFBRCxDQUF4QixDLENBS0E7OztBQUNBLElBQU1DLFVBQVUsR0FBSUYsUUFBUSxDQUFDRyxNQUFULENBQWdCO0FBQ2hDQyxFQUFBQSxVQUFVLEVBQUVDLE1BRG9CO0FBRWhDQyxFQUFBQSxJQUFJLEVBQUVELE1BRjBCO0FBR2hDRSxFQUFBQSxRQUFRLEVBQUVGLE1BSHNCO0FBSWhDRyxFQUFBQSxLQUFLLEVBQUVILE1BSnlCO0FBS2hDSSxFQUFBQSxRQUFRLEVBQUVKLE1BTHNCO0FBTWhDSyxFQUFBQSxLQUFLLEVBQUVMLE1BTnlCO0FBT2hDTSxFQUFBQSxNQUFNLEVBQUVDO0FBUHdCLENBQWhCLENBQXBCO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTs7QUFDQSxJQUFNQyxVQUFVLEdBQUdiLFFBQVEsQ0FBQ2MsS0FBVCxDQUFlLE9BQWYsRUFBd0JaLFVBQXhCLENBQW5CIiwic291cmNlUm9vdCI6Ii9ob21lL2FuZHJlcy9OQy9DT1VSU0VTL2NvdXJzZS1ncmFwaHFsL2V4ZXJjaXNlcy9hcGktbmV3c29mdC1jb21wdXRlci9zcmMvc2NoZW1hLyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IFNjaGVtYSBmcm9tICdtb25nb29zZSc7XG4vL2ltcG9ydCBtb257IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCcuLi9kYi9kYi1uZXdzb2Z0LWNvbXB1dGVyLmpzJyk7XG5cblxuXG5cbi8vIFNDSEVNQSBVU0VSXG5jb25zdCB1c2VyU2NoZW1hID0gIG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgY3JlYXRlZF9hdDogU3RyaW5nLFxuICAgIG5hbWU6IFN0cmluZyxcbiAgICBsYXN0bmFtZTogU3RyaW5nLFxuICAgIGVtYWlsOiBTdHJpbmcsXG4gICAgcGFzc3dvcmQ6IFN0cmluZyxcbiAgICBpbWFnZTogU3RyaW5nLFxuICAgIHN0YXR1czogQm9vbGVhblxufSlcblxuLypcbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hICh7XG4gICAgY3JlYXRlZF9hdDogU3RyaW5nLFxuICAgIG5hbWU6IFN0cmluZyxcbiAgICBsYXN0bmFtZTogU3RyaW5nLFxuICAgIGVtYWlsOiBTdHJpbmcsXG4gICAgcGFzc3dvcmQ6IFN0cmluZyxcbiAgICBpbWFnZTogU3RyaW5nLFxuICAgIHN0YXR1czogQm9vbGVhblxufSlcbiovXG5cbi8vY29uc3QgbXlEQiA9IG1vbmdvb3NlLmNvbm5lY3Rpb24udXNlRGIoJ25ld3NvZnQtY29tcHV0ZXInKTtcblxuLy8gQ3JlYWNpb24gZGVsIE1vZGVsbyAoU2VyaWEgY29tbyBsYSBEQiBvIFRhYmxhKVxuLy8gKCdOb21icmUgZGUgbGEgdGFibGEnLCBOb21icmVEZWxTY2hlbWEpXG5jb25zdCBtb2RlbFVzZXJzID0gbW9uZ29vc2UubW9kZWwoJ3VzZXJzJywgdXNlclNjaGVtYSApO1xuXG5leHBvcnQge21vZGVsVXNlcnN9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schemaUsers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "userSchema",
        "Schema",
        "created_at",
        "String",
        "name",
        "lastname",
        "email",
        "password",
        "image",
        "status",
        "Boolean",
        "modelUsers",
        "model"
      ],
      "mappings": ";;;;;;;AACA;;;;AACA;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,8BAAD,CAAxB,C,CAKA;;;AACA,IAAMC,UAAU,GAAIF,QAAQ,CAACG,MAAT,CAAgB;AAChCC,EAAAA,UAAU,EAAEC,MADoB;AAEhCC,EAAAA,IAAI,EAAED,MAF0B;AAGhCE,EAAAA,QAAQ,EAAEF,MAHsB;AAIhCG,EAAAA,KAAK,EAAEH,MAJyB;AAKhCI,EAAAA,QAAQ,EAAEJ,MALsB;AAMhCK,EAAAA,KAAK,EAAEL,MANyB;AAOhCM,EAAAA,MAAM,EAAEC;AAPwB,CAAhB,CAApB;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AACA,IAAMC,UAAU,GAAGb,QAAQ,CAACc,KAAT,CAAe,OAAf,EAAwBZ,UAAxB,CAAnB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/schema/",
      "sourcesContent": [
        "\nimport Schema from 'mongoose';\n//import mon{ Schema } from 'mongoose';\n\nconst mongoose = require('../db/db-newsoft-computer.js');\n\n\n\n\n// SCHEMA USER\nconst userSchema =  mongoose.Schema({\n    created_at: String,\n    name: String,\n    lastname: String,\n    email: String,\n    password: String,\n    image: String,\n    status: Boolean\n})\n\n/*\nconst userSchema = new mongoose.Schema ({\n    created_at: String,\n    name: String,\n    lastname: String,\n    email: String,\n    password: String,\n    image: String,\n    status: Boolean\n})\n*/\n\n//const myDB = mongoose.connection.useDb('newsoft-computer');\n\n// Creacion del Modelo (Seria como la DB o Tabla)\n// ('Nombre de la tabla', NombreDelSchema)\nconst modelUsers = mongoose.model('users', userSchema );\n\nexport {modelUsers};"
      ]
    },
    "sourceType": "script",
    "mtime": 1616860748000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"filename\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/db-newsoft-computer.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.13": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/db-newsoft-computer.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/db-newsoft-computer.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/db-newsoft-computer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/",
        "sourceFileName": "db-newsoft-computer.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Importacion de libreria Mongoose\n_mongoose[\"default\"].Promise = global.Promise; // Crear la conexion\n\n/*\nDeprecationWarning: el motor actual de detecciÃ³n y supervisiÃ³n del servidor estÃ¡ en desuso \ny se eliminarÃ¡ en un versiÃ³n futura Para usar el nuevo motor de Descubrimiento y monitoreo \ndel servidor, pase la opciÃ³n {useUnifiedTopology: true} al constructor MongoClient.\n*/\n\n_mongoose[\"default\"].set('useUnifiedTopology', true); // Conexion con la base de datos\n// ('url', {opciones})\n// Conexion Local\n//mongoose.connect('mongodb://localhost/clientes', {useNewUrlParser: true});\n// Conexion Remota\n//mongoose.connect('mongodb+srv://andresganc:mmdaa12345@nc-mongodb-clusternc-fggwa.gcp.mongodb.net/curso-clientes?retryWrites=true&w=majority', {useNewUrlParser: true});\n// Conexion con Mongodb Atlas\n// Proyecto: NC - Newsoft Computer\n// Cluster: cluster-nc-server-mongodb-nc\n// Base de datos: newsoft-computer\n\n\n_mongoose[\"default\"].connect('mongodb+srv://admin:M1m2d3a4a5***@cluster-nc-server-mongo.ryhbo.mongodb.net/newsoft_computer?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n});\n\nvar db = _mongoose[\"default\"].connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  console.log('Connected cluster: cluster-nc-server-mongodb-nc');\n  console.log('Connected db: newsoft-computer');\n});\nmodule.exports = _mongoose[\"default\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLW5ld3NvZnQtY29tcHV0ZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJQcm9taXNlIiwiZ2xvYmFsIiwic2V0IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsIm9uY2UiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUVBOzs7O0FBQTRDO0FBRTVDQSxxQkFBU0MsT0FBVCxHQUFtQkMsTUFBTSxDQUFDRCxPQUExQixDLENBQTRDOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBRCxxQkFBU0csR0FBVCxDQUFhLG9CQUFiLEVBQW1DLElBQW5DLEUsQ0FJQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUFILHFCQUFTSSxPQUFULENBQWlCLDBIQUFqQixFQUE2STtBQUFDQyxFQUFBQSxlQUFlLEVBQUU7QUFBbEIsQ0FBN0k7O0FBSUEsSUFBTUMsRUFBRSxHQUFHTixxQkFBU08sVUFBcEI7QUFFQUQsRUFBRSxDQUFDRSxFQUFILENBQU0sT0FBTixFQUFlQyxPQUFPLENBQUNDLEtBQVIsQ0FBY0MsSUFBZCxDQUFtQkYsT0FBbkIsRUFBNEIsbUJBQTVCLENBQWY7QUFDQUgsRUFBRSxDQUFDTSxJQUFILENBQVEsTUFBUixFQUFnQixZQUFNO0FBQ3BCSCxFQUFBQSxPQUFPLENBQUNJLEdBQVIsQ0FBWSxpREFBWjtBQUNBSixFQUFBQSxPQUFPLENBQUNJLEdBQVIsQ0FBWSxnQ0FBWjtBQUNELENBSEQ7QUFLQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixvQkFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5kcmVzL05DL0NPVVJTRVMvY291cnNlLWdyYXBocWwvZXhlcmNpc2VzL2FwaS1uZXdzb2Z0LWNvbXB1dGVyL3NyYy9kYi8iLCJzb3VyY2VzQ29udGVudCI6WyJcblxuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJzsgICAgICAgICAgICAvLyBJbXBvcnRhY2lvbiBkZSBsaWJyZXJpYSBNb25nb29zZVxuXG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7ICAgICAgICAgIC8vIENyZWFyIGxhIGNvbmV4aW9uXG5cbi8qXG5EZXByZWNhdGlvbldhcm5pbmc6IGVsIG1vdG9yIGFjdHVhbCBkZSBkZXRlY2Npw7NuIHkgc3VwZXJ2aXNpw7NuIGRlbCBzZXJ2aWRvciBlc3TDoSBlbiBkZXN1c28gXG55IHNlIGVsaW1pbmFyw6EgZW4gdW4gdmVyc2nDs24gZnV0dXJhIFBhcmEgdXNhciBlbCBudWV2byBtb3RvciBkZSBEZXNjdWJyaW1pZW50byB5IG1vbml0b3JlbyBcbmRlbCBzZXJ2aWRvciwgcGFzZSBsYSBvcGNpw7NuIHt1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWV9IGFsIGNvbnN0cnVjdG9yIE1vbmdvQ2xpZW50LlxuKi9cbm1vbmdvb3NlLnNldCgndXNlVW5pZmllZFRvcG9sb2d5JywgdHJ1ZSk7XG5cblxuXG4vLyBDb25leGlvbiBjb24gbGEgYmFzZSBkZSBkYXRvc1xuLy8gKCd1cmwnLCB7b3BjaW9uZXN9KVxuXG4vLyBDb25leGlvbiBMb2NhbFxuLy9tb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L2NsaWVudGVzJywge3VzZU5ld1VybFBhcnNlcjogdHJ1ZX0pO1xuXG4vLyBDb25leGlvbiBSZW1vdGFcbi8vbW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYitzcnY6Ly9hbmRyZXNnYW5jOm1tZGFhMTIzNDVAbmMtbW9uZ29kYi1jbHVzdGVybmMtZmdnd2EuZ2NwLm1vbmdvZGIubmV0L2N1cnNvLWNsaWVudGVzP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eScsIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcblxuLy8gQ29uZXhpb24gY29uIE1vbmdvZGIgQXRsYXNcbi8vIFByb3llY3RvOiBOQyAtIE5ld3NvZnQgQ29tcHV0ZXJcbi8vIENsdXN0ZXI6IGNsdXN0ZXItbmMtc2VydmVyLW1vbmdvZGItbmNcbi8vIEJhc2UgZGUgZGF0b3M6IG5ld3NvZnQtY29tcHV0ZXJcblxubW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYitzcnY6Ly9hZG1pbjpNMW0yZDNhNGE1KioqQGNsdXN0ZXItbmMtc2VydmVyLW1vbmdvLnJ5aGJvLm1vbmdvZGIubmV0L25ld3NvZnRfY29tcHV0ZXI/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Jywge3VzZU5ld1VybFBhcnNlcjogdHJ1ZX0pO1xuXG5cblxuY29uc3QgZGIgPSBtb25nb29zZS5jb25uZWN0aW9uO1xuXG5kYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ2Nvbm5lY3Rpb24gZXJyb3I6JykpO1xuZGIub25jZSgnb3BlbicsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCBjbHVzdGVyOiBjbHVzdGVyLW5jLXNlcnZlci1tb25nb2RiLW5jJyk7XG4gIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgZGI6IG5ld3NvZnQtY29tcHV0ZXInKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db-newsoft-computer.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "set",
        "connect",
        "useNewUrlParser",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAEA;;;;AAA4C;AAE5CA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B,C,CAA4C;;AAE5C;AACA;AACA;AACA;AACA;;AACAD,qBAASG,GAAT,CAAa,oBAAb,EAAmC,IAAnC,E,CAIA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEAH,qBAASI,OAAT,CAAiB,0HAAjB,EAA6I;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAA7I;;AAIA,IAAMC,EAAE,GAAGN,qBAASO,UAApB;AAEAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAM;AACpBH,EAAAA,OAAO,CAACI,GAAR,CAAY,iDAAZ;AACAJ,EAAAA,OAAO,CAACI,GAAR,CAAY,gCAAZ;AACD,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAiBf,oBAAjB",
      "sourceRoot": "/home/andres/NC/COURSES/course-graphql/exercises/api-newsoft-computer/src/db/",
      "sourcesContent": [
        "\n\nimport mongoose from 'mongoose';            // Importacion de libreria Mongoose\n\nmongoose.Promise = global.Promise;          // Crear la conexion\n\n/*\nDeprecationWarning: el motor actual de detecciÃ³n y supervisiÃ³n del servidor estÃ¡ en desuso \ny se eliminarÃ¡ en un versiÃ³n futura Para usar el nuevo motor de Descubrimiento y monitoreo \ndel servidor, pase la opciÃ³n {useUnifiedTopology: true} al constructor MongoClient.\n*/\nmongoose.set('useUnifiedTopology', true);\n\n\n\n// Conexion con la base de datos\n// ('url', {opciones})\n\n// Conexion Local\n//mongoose.connect('mongodb://localhost/clientes', {useNewUrlParser: true});\n\n// Conexion Remota\n//mongoose.connect('mongodb+srv://andresganc:mmdaa12345@nc-mongodb-clusternc-fggwa.gcp.mongodb.net/curso-clientes?retryWrites=true&w=majority', {useNewUrlParser: true});\n\n// Conexion con Mongodb Atlas\n// Proyecto: NC - Newsoft Computer\n// Cluster: cluster-nc-server-mongodb-nc\n// Base de datos: newsoft-computer\n\nmongoose.connect('mongodb+srv://admin:M1m2d3a4a5***@cluster-nc-server-mongo.ryhbo.mongodb.net/newsoft_computer?retryWrites=true&w=majority', {useNewUrlParser: true});\n\n\n\nconst db = mongoose.connection;\n\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', () => {\n  console.log('Connected cluster: cluster-nc-server-mongodb-nc');\n  console.log('Connected db: newsoft-computer');\n});\n\nmodule.exports = mongoose;"
      ]
    },
    "sourceType": "script",
    "mtime": 1598377200000
  }
}